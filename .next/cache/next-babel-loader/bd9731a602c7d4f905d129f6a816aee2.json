{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/components/readButton.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { playOpenSound } from '../util/sounds';\nimport { setReadMode } from '../logic/appMode';\nexport var ReadButton = function ReadButton() {\n  return __jsx(\"button\", {\n    onClick: function onClick() {\n      playOpenSound();\n\n      function fetchNotes() {\n        return _fetchNotes.apply(this, arguments);\n      }\n\n      function _fetchNotes() {\n        _fetchNotes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var res, data;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return fetch('api/notes');\n\n                case 2:\n                  res = _context.sent;\n                  _context.next = 5;\n                  return res.json();\n\n                case 5:\n                  data = _context.sent;\n                  setNotes(data);\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n        return _fetchNotes.apply(this, arguments);\n      }\n\n      fetchNotes();\n      setReadMode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, \"Read\");\n};\n_c = ReadButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadButton\");","map":{"version":3,"sources":["/home/teraoka/app/note/components/readButton.tsx"],"names":["playOpenSound","setReadMode","ReadButton","fetchNotes","fetch","res","json","data","setNotes"],"mappings":";;;;;;;;AAAA,SAASA,aAAT,QAA8B,gBAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SACxB;AACE,IAAA,OAAO,EAAE,mBAAM;AACbF,MAAAA,aAAa;;AADA,eAEEG,UAFF;AAAA;AAAA;;AAAA;AAAA,+EAEb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACoBC,KAAK,CAAC,WAAD,CADzB;;AAAA;AACQC,kBAAAA,GADR;AAAA;AAAA,yBAEqBA,GAAG,CAACC,IAAJ,EAFrB;;AAAA;AAEQC,kBAAAA,IAFR;AAGEC,kBAAAA,QAAQ,CAACD,IAAD,CAAR;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFa;AAAA;AAAA;;AAObJ,MAAAA,UAAU;AACVF,MAAAA,WAAW;AACZ,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADwB;AAAA,CAAnB;KAAMC,U","sourcesContent":["import { playOpenSound } from '../util/sounds'\nimport { setReadMode } from '../logic/appMode'\n\nexport const ReadButton = () => (\n  <button\n    onClick={() => {\n      playOpenSound()\n      async function fetchNotes() {\n        const res = await fetch('api/notes')\n        const data = await res.json()\n        setNotes(data)\n      }\n      fetchNotes()\n      setReadMode()\n    }}\n  >\n    Read\n  </button>\n)\n"]},"metadata":{},"sourceType":"module"}
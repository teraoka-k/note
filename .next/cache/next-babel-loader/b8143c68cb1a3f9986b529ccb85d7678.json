{"ast":null,"code":"var _jsxFileName = \"/home/teraoka/app/note/components/notePreview.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nexport default (props => {\n  const {\n    0: collapsed,\n    1: setCollaspsed\n  } = useState(true);\n  const collapsedText = props.note.text.split(/[\\r\\n]/).filter((line, i) => i < 2).reduce((l1, l2) => `${l1}\\r\\n${l2}`);\n  return __jsx(\"div\", {\n    onClick: () => setCollaspsed(!collapsed),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(ReactMarkdown, {\n    source: collapsed ? collapsedText : props.note.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/home/teraoka/app/note/components/notePreview.tsx"],"names":["useState","ReactMarkdown","props","collapsed","setCollaspsed","collapsedText","note","text","split","filter","line","i","reduce","l1","l2"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAOA,gBAAgBC,KAAD,IAAkB;AAC/B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA6BJ,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAMK,aAAa,GAAGH,KAAK,CAACI,IAAN,CAAWC,IAAX,CACnBC,KADmB,CACb,QADa,EAEnBC,MAFmB,CAEZ,CAACC,IAAD,EAAOC,CAAP,KAAaA,CAAC,GAAG,CAFL,EAGnBC,MAHmB,CAGZ,CAACC,EAAD,EAAKC,EAAL,KAAa,GAAED,EAAG,OAAMC,EAAG,EAHf,CAAtB;AAIA,SACE;AAAK,IAAA,OAAO,EAAE,MAAMV,aAAa,CAAC,CAACD,SAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,MAAM,EAAEA,SAAS,GAAGE,aAAH,GAAmBH,KAAK,CAACI,IAAN,CAAWC,IADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAOD,CAbD","sourcesContent":["import { useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { Note } from '../logic/colllections/note'\n\ninterface Props {\n  note: Note\n}\n\nexport default (props: Props) => {\n  const [collapsed, setCollaspsed] = useState(true)\n  const collapsedText = props.note.text\n    .split(/[\\r\\n]/)\n    .filter((line, i) => i < 2)\n    .reduce((l1, l2) => `${l1}\\r\\n${l2}`)\n  return (\n    <div onClick={() => setCollaspsed(!collapsed)}>\n      <ReactMarkdown\n        source={collapsed ? collapsedText : props.note.text}\n      ></ReactMarkdown>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
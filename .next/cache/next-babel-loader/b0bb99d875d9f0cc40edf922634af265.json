{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState } from 'react';\nexport var notes;\nexport var setNotes;\nexport function useNotes() {\n  return _useNotes.apply(this, arguments);\n}\n\nfunction _useNotes() {\n  var _s = $RefreshSig$();\n\n  _useNotes = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _useState, _useState2;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            ;\n            _useState = useState([]);\n            _useState2 = _slicedToArray(_useState, 2);\n            notes = _useState2[0];\n            setNotes = _useState2[1];\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"4bWmwqNpSmwrWYwBxf0uO8LDcFo=\"));\n  return _useNotes.apply(this, arguments);\n}\n\nexport function findNotes() {\n  return _findNotes.apply(this, arguments);\n}\n\nfunction _findNotes() {\n  _findNotes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('api/notes');\n\n          case 2:\n            _context2.next = 4;\n            return _context2.sent.json();\n\n          case 4:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _findNotes.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/teraoka/app/note/states/notes.ts"],"names":["useState","notes","setNotes","useNotes","findNotes","fetch","json"],"mappings":";;;AAAA,SAAmBA,QAAnB,QAA8D,OAA9D;AAGA,OAAO,IAAIC,KAAJ;AACP,OAAO,IAAIC,QAAJ;AAEP,gBAAsBC,QAAtB;AAAA;AAAA;;;;;0EAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACL;AADK,wBACgBH,QAAQ,CAAC,EAAD,CADxB;AAAA;AACHC,YAAAA,KADG;AACIC,YAAAA,QADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIP,gBAAsBE,SAAtB;AAAA;AAAA;;;wEAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeC,KAAK,CAAC,WAAD,CADpB;;AAAA;AAAA;AAAA,kCACmCC,IADnC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { Dispatch, useState, useEffect, SetStateAction } from 'react'\nimport { Note } from '../logic/colllections/note'\n\nexport let notes: Note[]\nexport let setNotes: Dispatch<SetStateAction<Note[]>>\n\nexport async function useNotes() {\n  ;[notes, setNotes] = useState([])\n}\n\nexport async function findNotes(): Promise<Note[]> {\n  return await (await fetch('api/notes')).json()\n}\n"]},"metadata":{},"sourceType":"module"}
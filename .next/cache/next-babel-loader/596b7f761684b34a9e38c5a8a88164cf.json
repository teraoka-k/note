{"ast":null,"code":"import { MongoClient } from 'mongodb';\nconst DB_ADDRESS_PORT = 'mongodb://localhost:27017';\nconst DB_NAME = 'mongodb';\nexport function insertDocument(collectionName, document) {\n  getCollection(collectionName).insertOne(document);\n}\nexport function findDocuments(collectionName, filter, reconnects) {\n  let documents = [];\n  MongoClient.connect(DB_ADDRESS_PORT, (err, client) => {\n    client.db(DB_NAME).collection(collectionName).find(filter).toArray((err, docs) => documents = docs);\n    client.close();\n  });\n  return documents;\n}\n/**\n * @private\n */\n\nfunction getCollection(collectionName) {\n  let collection;\n  MongoClient.connect(DB_ADDRESS_PORT, (err, client) => {\n    collection = client.db(DB_NAME).collection(collectionName);\n    client.close();\n  });\n  return collection;\n}","map":{"version":3,"sources":["/home/teraoka/app/note/logic/mongoAPI.ts"],"names":["MongoClient","DB_ADDRESS_PORT","DB_NAME","insertDocument","collectionName","document","getCollection","insertOne","findDocuments","filter","reconnects","documents","connect","err","client","db","collection","find","toArray","docs","close"],"mappings":"AAAA,SAASA,WAAT,QAA4C,SAA5C;AAEA,MAAMC,eAAe,GAAG,2BAAxB;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,OAAO,SAASC,cAAT,CAAwBC,cAAxB,EAAgDC,QAAhD,EAAkE;AACvEC,EAAAA,aAAa,CAACF,cAAD,CAAb,CAA8BG,SAA9B,CAAwCF,QAAxC;AACD;AAED,OAAO,SAASG,aAAT,CACLJ,cADK,EAELK,MAFK,EAGLC,UAHK,EAIE;AACP,MAAIC,SAAS,GAAG,EAAhB;AACAX,EAAAA,WAAW,CAACY,OAAZ,CAAoBX,eAApB,EAAqC,CAACY,GAAD,EAAMC,MAAN,KAAiB;AACpDA,IAAAA,MAAM,CACHC,EADH,CACMb,OADN,EAEGc,UAFH,CAEcZ,cAFd,EAGGa,IAHH,CAGQR,MAHR,EAIGS,OAJH,CAIW,CAACL,GAAD,EAAMM,IAAN,KAAgBR,SAAS,GAAGQ,IAJvC;AAKAL,IAAAA,MAAM,CAACM,KAAP;AACD,GAPD;AAQA,SAAOT,SAAP;AACD;AAED;;;;AAGA,SAASL,aAAT,CAAuBF,cAAvB,EAAgE;AAC9D,MAAIY,UAAJ;AACAhB,EAAAA,WAAW,CAACY,OAAZ,CAAoBX,eAApB,EAAqC,CAACY,GAAD,EAAMC,MAAN,KAAiB;AACpDE,IAAAA,UAAU,GAAGF,MAAM,CAACC,EAAP,CAAUb,OAAV,EAAmBc,UAAnB,CAA8BZ,cAA9B,CAAb;AACAU,IAAAA,MAAM,CAACM,KAAP;AACD,GAHD;AAIA,SAAOJ,UAAP;AACD","sourcesContent":["import { MongoClient, Db, Collection } from 'mongodb'\n\nconst DB_ADDRESS_PORT = 'mongodb://localhost:27017'\nconst DB_NAME = 'mongodb'\n\nexport function insertDocument(collectionName: string, document: object) {\n  getCollection(collectionName).insertOne(document)\n}\n\nexport function findDocuments(\n  collectionName: string,\n  filter: object,\n  reconnects?: boolean\n): any[] {\n  let documents = []\n  MongoClient.connect(DB_ADDRESS_PORT, (err, client) => {\n    client\n      .db(DB_NAME)\n      .collection(collectionName)\n      .find(filter)\n      .toArray((err, docs) => (documents = docs))\n    client.close()\n  })\n  return documents\n}\n\n/**\n * @private\n */\nfunction getCollection(collectionName: string): Collection<any> {\n  let collection: Collection<any>\n  MongoClient.connect(DB_ADDRESS_PORT, (err, client) => {\n    collection = client.db(DB_NAME).collection(collectionName)\n    client.close()\n  })\n  return collection\n}\n"]},"metadata":{},"sourceType":"module"}
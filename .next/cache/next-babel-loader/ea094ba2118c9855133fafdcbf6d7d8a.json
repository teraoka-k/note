{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from 'react';\nvar SOUND_FILE_NAMES = ['open', 'close', 'enter'];\nvar soundLibrary;\nvar setSoundLibrary;\nexport function useSounds() {\n  _s();\n\n  var sounds = {};\n  SOUND_FILE_NAMES.forEach(function (fileName) {\n    return sounds[fileName] = new window.Audio(\"sounds/\".concat(fileName, \".mp3\"));\n  });\n\n  var _useState = useState(sounds);\n\n  var _useState2 = _slicedToArray(_useState, 2);\n\n  soundLibrary = _useState2[0];\n  setSoundLibrary = _useState2[1];\n}\n\n_s(useSounds, \"70RKFpXA8yrWXRydtMHLXNP5SmE=\");\n\nexport function playOpenSound() {\n  soundLibrary['open'].play();\n}\nexport function playCloseSound() {\n  soundLibrary['close'].play();\n}\nexport function playEnterSound() {\n  soundLibrary['enter'].play();\n}","map":{"version":3,"sources":["/home/teraoka/app/note/states/soundLibrary.ts"],"names":["useState","SOUND_FILE_NAMES","soundLibrary","setSoundLibrary","useSounds","sounds","forEach","fileName","window","Audio","playOpenSound","play","playCloseSound","playEnterSound"],"mappings":";;;;AAAA,SAASA,QAAT,QAAmD,OAAnD;AAEA,IAAMC,gBAAgB,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAzB;AAEA,IAAIC,YAAJ;AACA,IAAIC,eAAJ;AAEA,OAAO,SAASC,SAAT,GAA2B;AAAA;;AAChC,MAAMC,MAAM,GAAG,EAAf;AACAJ,EAAAA,gBAAgB,CAACK,OAAjB,CACE,UAACC,QAAD;AAAA,WACGF,MAAM,CAACE,QAAD,CAAN,GAAmB,IAAIC,MAAM,CAACC,KAAX,kBAA2BF,QAA3B,UADtB;AAAA,GADF;;AAFgC,kBAMGP,QAAQ,CAACK,MAAD,CANX;;AAAA;;AAM9BH,EAAAA,YAN8B;AAMhBC,EAAAA,eANgB;AAOjC;;GAPeC,S;;AAShB,OAAO,SAASM,aAAT,GAA+B;AACpCR,EAAAA,YAAY,CAAC,MAAD,CAAZ,CAAqBS,IAArB;AACD;AAED,OAAO,SAASC,cAAT,GAAgC;AACrCV,EAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsBS,IAAtB;AACD;AAED,OAAO,SAASE,cAAT,GAAgC;AACrCX,EAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsBS,IAAtB;AACD","sourcesContent":["import { useState, Dispatch, SetStateAction } from 'react'\n\nconst SOUND_FILE_NAMES = ['open', 'close', 'enter']\n\nlet soundLibrary: SoundLibrary\nlet setSoundLibrary: Dispatch<SetStateAction<SoundLibrary>>\n\nexport function useSounds(): void {\n  const sounds = {}\n  SOUND_FILE_NAMES.forEach(\n    (fileName) =>\n      (sounds[fileName] = new window.Audio(`sounds/${fileName}.mp3`))\n  )\n  ;[soundLibrary, setSoundLibrary] = useState(sounds)\n}\n\nexport function playOpenSound(): void {\n  soundLibrary['open'].play()\n}\n\nexport function playCloseSound(): void {\n  soundLibrary['close'].play()\n}\n\nexport function playEnterSound(): void {\n  soundLibrary['enter'].play()\n}\n\ninterface SoundLibrary {\n  [soundName: string]: HTMLAudioElement\n}\n"]},"metadata":{},"sourceType":"module"}
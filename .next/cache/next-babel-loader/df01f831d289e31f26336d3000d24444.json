{"ast":null,"code":"var _jsxFileName = \"/home/teraoka/app/note/components/readMode.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport { Note } from '../logic/colllections/note';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nexport const ReadMode = props => {\n  const notes = ['test1', 'test2', 'test3', 'test4', 'test5'].map(text => {\n    return {\n      text: text\n    };\n  });\n  return __jsx(Swiper, {\n    spaceBetween: 50,\n    slidesPerView: 3,\n    navigation: Navigation,\n    pagination: {\n      clickable: true\n    },\n    scrollbar: {\n      draggable: true\n    },\n    onSwiper: swiper => console.log(swiper),\n    onSlideChange: () => console.log('slide change'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, notes.map(note => __jsx(SwiperSlide, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, note.text)), \"...\");\n};\nexport async function getStaticProps() {\n  const notes = await Note.find();\n  return {\n    props: {\n      text: notes.map(note => note.text)\n    }\n  };\n}","map":{"version":3,"sources":["/home/teraoka/app/note/components/readMode.tsx"],"names":["SwiperCore","Navigation","Pagination","Scrollbar","A11y","Swiper","SwiperSlide","Note","use","ReadMode","props","notes","map","text","clickable","draggable","swiper","console","log","note","getStaticProps","find"],"mappings":";;;AAAA,OAAOA,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,IAAxD,QAAoE,QAApE;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AAEA,OAAO,oBAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AACA,OAAO,4CAAP;AACA,SAASC,IAAT,QAAqB,4BAArB;AAEAP,UAAU,CAACQ,GAAX,CAAe,CAACP,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,EAAoCC,IAApC,CAAf;AAIA,OAAO,MAAMK,QAAQ,GAAIC,KAAD,IAA0B;AAChD,QAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,OAA5B,EAAqC,OAArC,EAA8CC,GAA9C,CAAmDC,IAAD,IAAU;AACxE,WAAO;AAAEA,MAAAA,IAAI,EAAEA;AAAR,KAAP;AACD,GAFa,CAAd;AAIA,SACE,MAAC,MAAD;AACE,IAAA,YAAY,EAAE,EADhB;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,UAAU,EAAEZ,UAHd;AAIE,IAAA,UAAU,EAAE;AAAEa,MAAAA,SAAS,EAAE;AAAb,KAJd;AAKE,IAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KALb;AAME,IAAA,QAAQ,EAAGC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CANxB;AAOE,IAAA,aAAa,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGP,KAAK,CAACC,GAAN,CAAWO,IAAD,IACT,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,IAAI,CAACN,IAAnB,CADD,CATH,QADF;AAgBD,CArBM;AAuBP,OAAO,eAAeO,cAAf,GAAgC;AACrC,QAAMT,KAAK,GAAG,MAAMJ,IAAI,CAACc,IAAL,EAApB;AACA,SAAO;AACLX,IAAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAEF,KAAK,CAACC,GAAN,CAAWO,IAAD,IAAUA,IAAI,CAACN,IAAzB;AAAR;AADF,GAAP;AAGD","sourcesContent":["import SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nimport 'swiper/swiper.scss'\nimport 'swiper/components/navigation/navigation.scss'\nimport 'swiper/components/pagination/pagination.scss'\nimport 'swiper/components/scrollbar/scrollbar.scss'\nimport { Note } from '../logic/colllections/note'\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y])\n\ninterface ReadModeProps {}\n\nexport const ReadMode = (props: ReadModeProps) => {\n  const notes = ['test1', 'test2', 'test3', 'test4', 'test5'].map((text) => {\n    return { text: text }\n  })\n\n  return (\n    <Swiper\n      spaceBetween={50}\n      slidesPerView={3}\n      navigation={Navigation}\n      pagination={{ clickable: true }}\n      scrollbar={{ draggable: true }}\n      onSwiper={(swiper) => console.log(swiper)}\n      onSlideChange={() => console.log('slide change')}\n    >\n      {notes.map((note) => (\n        <SwiperSlide>{note.text}</SwiperSlide>\n      ))}\n      ...\n    </Swiper>\n  )\n}\n\nexport async function getStaticProps() {\n  const notes = await Note.find()\n  return {\n    props: { text: notes.map((note) => note.text) },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/teraoka/app/note/components/reader.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { NotePreview } from './notePreview';\nimport { useState, useEffect } from 'react';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nexport const Reader = () => {\n  const {\n    0: notes,\n    1: setNotes\n  } = useState([]);\n  useEffect(() => {\n    const fetchNotes = async () => setNotes(await (await fetch('api/notes')).json());\n\n    fetchNotes();\n  }, []);\n  return __jsx(Swiper, {\n    spaceBetween: 50,\n    slidesPerView: 3,\n    navigation: Navigation,\n    pagination: {\n      clickable: true\n    },\n    scrollbar: {\n      draggable: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, notes.map(note => __jsx(SwiperSlide, {\n    key: note._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(NotePreview, {\n    note: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/teraoka/app/note/components/reader.tsx"],"names":["SwiperCore","Navigation","Pagination","Scrollbar","A11y","Swiper","SwiperSlide","NotePreview","useState","useEffect","use","Reader","notes","setNotes","fetchNotes","fetch","json","clickable","draggable","map","note","_id"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AACA,OAAO,4CAAP;AACA,OAAOA,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,IAAxD,QAAoE,QAApE;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AAEA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEAT,UAAU,CAACU,GAAX,CAAe,CAACT,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,EAAoCC,IAApC,CAAf;AAEA,OAAO,MAAMO,MAAM,GAAG,MAAM;AAC1B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,UAAU,GAAG,YACjBD,QAAQ,CAAC,MAAM,CAAC,MAAME,KAAK,CAAC,WAAD,CAAZ,EAA2BC,IAA3B,EAAP,CADV;;AAEAF,IAAAA,UAAU;AACX,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,MAAC,MAAD;AACE,IAAA,YAAY,EAAE,EADhB;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,UAAU,EAAEb,UAHd;AAIE,IAAA,UAAU,EAAE;AAAEgB,MAAAA,SAAS,EAAE;AAAb,KAJd;AAKE,IAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGN,KAAK,CAACO,GAAN,CAAWC,IAAD,IACT,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAED,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CAPH,CADF;AAeD,CAxBM","sourcesContent":["import 'swiper/swiper.scss'\nimport 'swiper/components/navigation/navigation.scss'\nimport 'swiper/components/pagination/pagination.scss'\nimport 'swiper/components/scrollbar/scrollbar.scss'\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { Note } from '../logic/colllections/note'\nimport { NotePreview } from './notePreview'\nimport { useState, useEffect } from 'react'\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y])\n\nexport const Reader = () => {\n  const [notes, setNotes] = useState([] as Note[])\n\n  useEffect(() => {\n    const fetchNotes = async () =>\n      setNotes(await (await fetch('api/notes')).json())\n    fetchNotes()\n  }, [])\n\n  return (\n    <Swiper\n      spaceBetween={50}\n      slidesPerView={3}\n      navigation={Navigation}\n      pagination={{ clickable: true }}\n      scrollbar={{ draggable: true }}\n    >\n      {notes.map((note) => (\n        <SwiperSlide key={note._id}>\n          <NotePreview note={note}></NotePreview>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/components/writer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { cacheData, getCache } from '../cache/cache';\nimport { buttons, leftPane, rightPane } from '../styles/styles';\nimport { windowHeight } from '../states/windowSize';\nimport { BackButton } from './backButton';\nimport { SaveButton } from './saveButton';\nimport { isWriteMode } from '../states/appMode';\nimport { viewingNote } from '../states/viewingNote';\nvar Mode;\n\n(function (Mode) {\n  Mode[Mode[\"IN\"] = 0] = \"IN\";\n  Mode[Mode[\"OUT\"] = 1] = \"OUT\";\n})(Mode || (Mode = {}));\n\nexport var Writer = function Writer() {\n  _s();\n\n  // states\n  var _useState = useState(isWriteMode() ? getCache('writing') || '# Markdown Editor\\n\\nwrite a note here' : viewingNote.text),\n      src = _useState[0],\n      setSrc = _useState[1];\n\n  var _useState2 = useState(Mode.IN),\n      mode = _useState2[0],\n      setMode = _useState2[1]; // reference to child components\n\n\n  var inputElement = useRef(null);\n  var outputElement = useRef(null);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    style: buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(SaveButton, {\n    src: src,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(BackButton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(\"textarea\", {\n    style: leftPane,\n    onChange: function onChange(e) {\n      setSrc(e.target.value);\n      cacheData('writing', src);\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setMode(Mode.IN);\n    },\n    onTouchStart: function onTouchStart() {\n      return setMode(Mode.IN);\n    },\n    onScroll: function onScroll(e) {\n      if (mode == Mode.IN) {\n        outputElement.current.scrollTop = e.currentTarget.scrollTop / (e.currentTarget.scrollHeight - windowHeight) * (outputElement.current.scrollHeight - windowHeight);\n      }\n    },\n    ref: inputElement,\n    value: src,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: rightPane,\n    onMouseEnter: function onMouseEnter() {\n      return setMode(Mode.OUT);\n    },\n    onTouchStart: function onTouchStart() {\n      return setMode(Mode.OUT);\n    },\n    onScroll: function onScroll(e) {\n      if (mode == Mode.OUT) {\n        inputElement.current.scrollTop = e.currentTarget.scrollTop / (e.currentTarget.scrollHeight - windowHeight) * (inputElement.current.scrollHeight - windowHeight);\n      }\n    },\n    ref: outputElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(ReactMarkdown, {\n    source: src,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Writer, \"NVP8QwNt/6cBNR8lkxSRZ3xZplE=\");\n\n_c = Writer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Writer\");","map":{"version":3,"sources":["/home/teraoka/app/note/components/writer.tsx"],"names":["useState","useRef","ReactMarkdown","cacheData","getCache","buttons","leftPane","rightPane","windowHeight","BackButton","SaveButton","isWriteMode","viewingNote","Mode","Writer","text","src","setSrc","IN","mode","setMode","inputElement","outputElement","e","target","value","current","scrollTop","currentTarget","scrollHeight","OUT"],"mappings":"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","sourcesContent":["import { useState, useRef, useEffect } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { cacheData, getCache } from '../cache/cache'\nimport { buttons, leftPane, rightPane } from '../styles/styles'\nimport { windowHeight } from '../states/windowSize'\nimport { BackButton } from './backButton'\nimport { SaveButton } from './saveButton'\nimport { isWriteMode } from '../states/appMode'\nimport { viewingNote } from '../states/viewingNote'\n\nenum Mode {\n  IN,\n  OUT,\n}\n\nexport const Writer = () => {\n  // states\n  const [src, setSrc] = useState(\n    isWriteMode()\n      ? getCache('writing') || '# Markdown Editor\\n\\nwrite a note here'\n      : viewingNote.text\n  )\n  const [mode, setMode] = useState(Mode.IN)\n\n  // reference to child components\n  const inputElement = useRef(null)\n  const outputElement = useRef(null)\n\n  return (\n    <div>\n      <div style={buttons}>\n        <SaveButton src={src}></SaveButton>\n        <BackButton></BackButton>\n      </div>\n      <textarea\n        style={leftPane}\n        onChange={(e) => {\n          setSrc(e.target.value)\n          cacheData('writing', src)\n        }}\n        onMouseEnter={() => setMode(Mode.IN)}\n        onTouchStart={() => setMode(Mode.IN)}\n        onScroll={(e) => {\n          if (mode == Mode.IN) {\n            outputElement.current.scrollTop =\n              (e.currentTarget.scrollTop /\n                (e.currentTarget.scrollHeight - windowHeight)) *\n              (outputElement.current.scrollHeight - windowHeight)\n          }\n        }}\n        ref={inputElement}\n        value={src}\n      ></textarea>\n      <div\n        style={rightPane}\n        onMouseEnter={() => setMode(Mode.OUT)}\n        onTouchStart={() => setMode(Mode.OUT)}\n        onScroll={(e) => {\n          if (mode == Mode.OUT) {\n            inputElement.current.scrollTop =\n              (e.currentTarget.scrollTop /\n                (e.currentTarget.scrollHeight - windowHeight)) *\n              (inputElement.current.scrollHeight - windowHeight)\n          }\n        }}\n        ref={outputElement}\n      >\n        <ReactMarkdown source={src}></ReactMarkdown>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport let windowHeight;\nexport let setWindowHeight;\nexport let windowWidth;\nexport let setWindowWidth;\nexport function useWindowSize() {\n  ;\n  [windowHeight, setWindowHeight] = useState(0);\n  [windowWidth, setWindowWidth] = useState(0);\n  useEffect(() => {\n    const adaptWindowSize = () => {\n      setWindowHeight(window.innerHeight * 0.9 / 2.1);\n      setWindowWidth(window.innerWidth * 0.9 - 20);\n    };\n\n    adaptWindowSize();\n    window.addEventListener('resize', adaptWindowSize);\n  });\n}","map":{"version":3,"sources":["/home/teraoka/app/note/states/windowSize.ts"],"names":["useState","useEffect","windowHeight","setWindowHeight","windowWidth","setWindowWidth","useWindowSize","adaptWindowSize","window","innerHeight","innerWidth","addEventListener"],"mappings":"AAAA,SAASA,QAAT,EAA6CC,SAA7C,QAA8D,OAA9D;AAEA,OAAO,IAAIC,YAAJ;AACP,OAAO,IAAIC,eAAJ;AACP,OAAO,IAAIC,WAAJ;AACP,OAAO,IAAIC,cAAJ;AAEP,OAAO,SAASC,aAAT,GAAyB;AAC9B;AAAC,GAACJ,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,CAAD,CAA1C;AACA,GAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAAxC;AACDC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,eAAe,GAAG,MAAM;AAC5BJ,MAAAA,eAAe,CAAEK,MAAM,CAACC,WAAP,GAAqB,GAAtB,GAA6B,GAA9B,CAAf;AACAJ,MAAAA,cAAc,CAACG,MAAM,CAACE,UAAP,GAAoB,GAApB,GAA0B,EAA3B,CAAd;AACD,KAHD;;AAIAH,IAAAA,eAAe;AACfC,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,eAAlC;AACD,GAPQ,CAAT;AAQD","sourcesContent":["import { useState, Dispatch, SetStateAction, useEffect } from 'react'\n\nexport let windowHeight: number\nexport let setWindowHeight: Dispatch<SetStateAction<number>>\nexport let windowWidth: number\nexport let setWindowWidth: Dispatch<SetStateAction<number>>\n\nexport function useWindowSize() {\n  ;[windowHeight, setWindowHeight] = useState(0)\n  ;[windowWidth, setWindowWidth] = useState(0)\n  useEffect(() => {\n    const adaptWindowSize = () => {\n      setWindowHeight((window.innerHeight * 0.9) / 2.1)\n      setWindowWidth(window.innerWidth * 0.9 - 20)\n    }\n    adaptWindowSize()\n    window.addEventListener('resize', adaptWindowSize)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/teraoka/app/note/components/notePreviewer.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { NotePreview } from './notePreview';\nimport { notes, useNotes } from '../states/notes';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Pagination, Scrollbar } from 'swiper';\nimport { setViewingNote } from '../states/viewingNote';\nimport { windowWidth } from '../states/windowSize';\nSwiperCore.use([Pagination, Scrollbar]);\nexport const NotePreviewer = () => {\n  useNotes();\n  return __jsx(Swiper, {\n    slidesPerView: windowWidth > 1000 ? 7 : windowWidth > 800 ? 5 : windowWidth > 300 ? 3 : 2,\n    scrollbar: {\n      draggable: true\n    },\n    freeMode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, notes.map(note => __jsx(SwiperSlide, {\n    key: note._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    onClick: () => setViewingNote(note),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(NotePreview, {\n    note: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/home/teraoka/app/note/components/notePreviewer.tsx"],"names":["NotePreview","notes","useNotes","Swiper","SwiperSlide","SwiperCore","Pagination","Scrollbar","setViewingNote","windowWidth","use","NotePreviewer","draggable","map","note","_id"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,iBAAhC;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAOC,UAAP,IAAqBC,UAArB,EAAiCC,SAAjC,QAAkD,QAAlD;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AAEAJ,UAAU,CAACK,GAAX,CAAe,CAACJ,UAAD,EAAaC,SAAb,CAAf;AAEA,OAAO,MAAMI,aAAa,GAAG,MAAM;AACjCT,EAAAA,QAAQ;AACR,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EACXO,WAAW,GAAG,IAAd,GACI,CADJ,GAEIA,WAAW,GAAG,GAAd,GACA,CADA,GAEAA,WAAW,GAAG,GAAd,GACA,CADA,GAEA,CARR;AAUE,IAAA,SAAS,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAVb;AAWE,IAAA,QAAQ,MAXV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGX,KAAK,CAACY,GAAN,CAAWC,IAAD,IACT,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,OAAO,EAAE,MAAMP,cAAc,CAACM,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADD,CAbH,CADF;AAuBD,CAzBM","sourcesContent":["import { NotePreview } from './notePreview'\nimport { notes, useNotes } from '../states/notes'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore, { Pagination, Scrollbar } from 'swiper'\nimport { setViewingNote } from '../states/viewingNote'\nimport { windowWidth } from '../states/windowSize'\n\nSwiperCore.use([Pagination, Scrollbar])\n\nexport const NotePreviewer = () => {\n  useNotes()\n  return (\n    <Swiper\n      slidesPerView={\n        windowWidth > 1000\n          ? 7\n          : windowWidth > 800\n          ? 5\n          : windowWidth > 300\n          ? 3\n          : 2\n      }\n      scrollbar={{ draggable: true }}\n      freeMode\n    >\n      {notes.map((note) => (\n        <SwiperSlide key={note._id}>\n          <div onClick={() => setViewingNote(note)}>\n            <NotePreview note={note}></NotePreview>\n          </div>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
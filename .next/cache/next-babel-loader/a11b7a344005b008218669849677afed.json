{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/components/readMode.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nexport var ReadMode = function ReadMode(props) {\n  return __jsx(Swiper, {\n    spaceBetween: 50,\n    slidesPerView: 3,\n    navigation: Navigation,\n    pagination: {\n      clickable: true\n    },\n    scrollbar: {\n      draggable: true\n    },\n    onSwiper: function onSwiper(swiper) {\n      return console.log(swiper);\n    },\n    onSlideChange: function onSlideChange() {\n      return console.log('slide change');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.notes.map(function (note) {\n    return __jsx(SwiperSlide, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, note.text);\n  }), \"...\");\n};\n_c = ReadMode;\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var notes;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Note.find();\n\n          case 2:\n            notes = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                notes: notes.map(function (note) {\n                  return note.text;\n                })\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadMode\");","map":{"version":3,"sources":["/home/teraoka/app/note/components/readMode.tsx"],"names":["SwiperCore","Navigation","Pagination","Scrollbar","A11y","Swiper","SwiperSlide","use","ReadMode","props","clickable","draggable","swiper","console","log","notes","map","note","text","getStaticProps","Note","find"],"mappings":";;;;;;;;AAAA,OAAOA,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,IAAxD,QAAoE,QAApE;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AAEA,OAAO,oBAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AACA,OAAO,4CAAP;AAEAN,UAAU,CAACO,GAAX,CAAe,CAACN,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,EAAoCC,IAApC,CAAf;AAMA,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAA0B;AAChD,SACE,MAAC,MAAD;AACE,IAAA,YAAY,EAAE,EADhB;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,UAAU,EAAER,UAHd;AAIE,IAAA,UAAU,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAJd;AAKE,IAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KALb;AAME,IAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,aAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAZ;AAAA,KANZ;AAOE,IAAA,aAAa,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA,KAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGL,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD;AAAA,WACf,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcA,IAAI,CAACC,IAAnB,CADe;AAAA,GAAhB,CATH,QADF;AAgBD,CAjBM;KAAMV,Q;AAmBb,gBAAsBW,cAAtB;AAAA;AAAA;;;6EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeC,IAAI,CAACC,IAAL,EADf;;AAAA;AACCN,YAAAA,KADD;AAAA,6CAEE;AACLN,cAAAA,KAAK,EAAE;AAAEM,gBAAAA,KAAK,EAAEA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,yBAAUA,IAAI,CAACC,IAAf;AAAA,iBAAV;AAAT;AADF,aAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nimport 'swiper/swiper.scss'\nimport 'swiper/components/navigation/navigation.scss'\nimport 'swiper/components/pagination/pagination.scss'\nimport 'swiper/components/scrollbar/scrollbar.scss'\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y])\n\ninterface ReadModeProps {\n  notes?: string[]\n}\n\nexport const ReadMode = (props: ReadModeProps) => {\n  return (\n    <Swiper\n      spaceBetween={50}\n      slidesPerView={3}\n      navigation={Navigation}\n      pagination={{ clickable: true }}\n      scrollbar={{ draggable: true }}\n      onSwiper={(swiper) => console.log(swiper)}\n      onSlideChange={() => console.log('slide change')}\n    >\n      {props.notes.map((note) => (\n        <SwiperSlide>{note.text}</SwiperSlide>\n      ))}\n      ...\n    </Swiper>\n  )\n}\n\nexport async function getStaticProps() {\n  const notes = await Note.find()\n  return {\n    props: { notes: notes.map((note) => note.text) },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
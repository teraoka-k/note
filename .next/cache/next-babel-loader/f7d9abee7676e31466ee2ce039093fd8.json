{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { isReadMode, setWriteMode, isWriteMode, isRewriteMode, setReadMode } from '../states/appMode';\nexport var useShortcutKeys = function useShortcutKeys() {\n  _s();\n\n  useEffect(function () {\n    shortcutKeys.forEach(function (shortcut) {\n      window.addEventListener(shortcut.event || 'keydown', function (e) {\n        if ((Array.isArray(shortcut.key) && shortcut.key.some(function (key) {\n          return e.key == key;\n        }) || e.key == shortcut.key) && (shortcut.alt && e.altKey || !shortcut.alt) && (shortcut.ctrl && e.ctrlKey || !shortcut.ctrl) && (shortcut.meta && e.metaKey || !shortcut.meta) && (shortcut.shift && e.shiftKey || !shortcut.shift)) shortcut.action();\n      });\n    });\n  }, []);\n};\n\n_s(useShortcutKeys, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nvar shortcutKeys = [{\n  key: 'a',\n  action: function action() {\n    if (isReadMode()) setWriteMode();\n  }\n}, {\n  key: ['Escape', 'b'],\n  action: function action() {\n    if (isWriteMode() || isRewriteMode()) setReadMode();\n  }\n}];","map":{"version":3,"sources":["/home/teraoka/app/note/logic/shortcutKeys.ts"],"names":["useEffect","isReadMode","setWriteMode","isWriteMode","isRewriteMode","setReadMode","useShortcutKeys","shortcutKeys","forEach","shortcut","window","addEventListener","event","e","Array","isArray","key","some","alt","altKey","ctrl","ctrlKey","meta","metaKey","shift","shiftKey","action"],"mappings":";;AAAA,SAASA,SAAT,QAA+B,OAA/B;AACA,SACEC,UADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,WALF,QAMO,mBANP;AAQA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAY;AAAA;;AACzCN,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAACC,QAAD,EAAc;AACjCC,MAAAA,MAAM,CAACC,gBAAP,CACEF,QAAQ,CAACG,KAAT,IAAkB,SADpB,EAEE,UAACC,CAAD,EAAsB;AACpB,YACE,CAAEC,KAAK,CAACC,OAAN,CAAcN,QAAQ,CAACO,GAAvB,KACAP,QAAQ,CAACO,GAAT,CAAaC,IAAb,CAAkB,UAACD,GAAD;AAAA,iBAASH,CAAC,CAACG,GAAF,IAASA,GAAlB;AAAA,SAAlB,CADD,IAECH,CAAC,CAACG,GAAF,IAASP,QAAQ,CAACO,GAFpB,MAGEP,QAAQ,CAACS,GAAT,IAAgBL,CAAC,CAACM,MAAnB,IAA8B,CAACV,QAAQ,CAACS,GAHzC,MAIET,QAAQ,CAACW,IAAT,IAAiBP,CAAC,CAACQ,OAApB,IAAgC,CAACZ,QAAQ,CAACW,IAJ3C,MAKEX,QAAQ,CAACa,IAAT,IAAiBT,CAAC,CAACU,OAApB,IAAgC,CAACd,QAAQ,CAACa,IAL3C,MAMEb,QAAQ,CAACe,KAAT,IAAkBX,CAAC,CAACY,QAArB,IAAkC,CAAChB,QAAQ,CAACe,KAN7C,CADF,EASEf,QAAQ,CAACiB,MAAT;AACH,OAbH;AAeD,KAhBD;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAmBD,CApBM;;GAAMpB,e;;AAsBb,IAAMC,YAA2B,GAAG,CAClC;AACES,EAAAA,GAAG,EAAE,GADP;AAEEU,EAAAA,MAAM,EAAE,kBAAM;AACZ,QAAIzB,UAAU,EAAd,EAAkBC,YAAY;AAC/B;AAJH,CADkC,EAOlC;AACEc,EAAAA,GAAG,EAAE,CAAC,QAAD,EAAW,GAAX,CADP;AAEEU,EAAAA,MAAM,EAAE,kBAAM;AACZ,QAAIvB,WAAW,MAAMC,aAAa,EAAlC,EAAsCC,WAAW;AAClD;AAJH,CAPkC,CAApC","sourcesContent":["import { useEffect, Key } from 'react'\nimport {\n  isReadMode,\n  setWriteMode,\n  isWriteMode,\n  isRewriteMode,\n  setReadMode,\n} from '../states/appMode'\n\nexport const useShortcutKeys = (): void => {\n  useEffect(() => {\n    shortcutKeys.forEach((shortcut) => {\n      window.addEventListener(\n        shortcut.event || 'keydown',\n        (e: KeyboardEvent) => {\n          if (\n            ((Array.isArray(shortcut.key) &&\n              shortcut.key.some((key) => e.key == key)) ||\n              e.key == shortcut.key) &&\n            ((shortcut.alt && e.altKey) || !shortcut.alt) &&\n            ((shortcut.ctrl && e.ctrlKey) || !shortcut.ctrl) &&\n            ((shortcut.meta && e.metaKey) || !shortcut.meta) &&\n            ((shortcut.shift && e.shiftKey) || !shortcut.shift)\n          )\n            shortcut.action()\n        }\n      )\n    })\n  }, [])\n}\n\nconst shortcutKeys: ShortcutKey[] = [\n  {\n    key: 'a',\n    action: () => {\n      if (isReadMode()) setWriteMode()\n    },\n  },\n  {\n    key: ['Escape', 'b'],\n    action: () => {\n      if (isWriteMode() || isRewriteMode()) setReadMode()\n    },\n  },\n]\n\ninterface ShortcutKey {\n  key: Key | Key[]\n  action: () => void\n  event?: keyof WindowEventMap\n  alt?: boolean\n  ctrl?: boolean\n  meta?: boolean\n  shift?: boolean\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nvar AppMode;\n\n(function (AppMode) {\n  AppMode[AppMode[\"home\"] = 0] = \"home\";\n  AppMode[AppMode[\"write\"] = 1] = \"write\";\n  AppMode[AppMode[\"read\"] = 2] = \"read\";\n})(AppMode || (AppMode = {}));\n\nexport function useAppMode() {\n  _s();\n\n  var _useState = useState(AppMode.home),\n      mode = _useState[0],\n      setMode = _useState[1];\n}\n\n_s(useAppMode, \"hSjdgMRM8ZFTq6mprEdLp1PM2sI=\");\n\nexport function isHomeMode() {\n  return mode == AppMode.home;\n}\nexport function isWriteMode() {\n  return mode == AppMode.write;\n}\nexport function isReadMode() {\n  return mode == AppMode.read;\n}\nexport function setHomeMode() {\n  setMode(AppMode.home);\n}\nexport function setWriteMode() {\n  setMode(AppMode.write);\n}\nexport function setReadMode() {\n  setMode(AppMode.read);\n}","map":{"version":3,"sources":["/home/teraoka/app/note/logic/appMode.ts"],"names":["useState","AppMode","useAppMode","home","mode","setMode","isHomeMode","isWriteMode","write","isReadMode","read","setHomeMode","setWriteMode","setReadMode"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;IAEKC,O;;WAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;GAAAA,O,KAAAA,O;;AAML,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAAA,kBACHF,QAAQ,CAACC,OAAO,CAACE,IAAT,CADL;AAAA,MACpBC,IADoB;AAAA,MACdC,OADc;AAE5B;;GAFeH,U;;AAIhB,OAAO,SAASI,UAAT,GAA+B;AACpC,SAAOF,IAAI,IAAIH,OAAO,CAACE,IAAvB;AACD;AACD,OAAO,SAASI,WAAT,GAAgC;AACrC,SAAOH,IAAI,IAAIH,OAAO,CAACO,KAAvB;AACD;AACD,OAAO,SAASC,UAAT,GAA+B;AACpC,SAAOL,IAAI,IAAIH,OAAO,CAACS,IAAvB;AACD;AACD,OAAO,SAASC,WAAT,GAA6B;AAClCN,EAAAA,OAAO,CAACJ,OAAO,CAACE,IAAT,CAAP;AACD;AACD,OAAO,SAASS,YAAT,GAA8B;AACnCP,EAAAA,OAAO,CAACJ,OAAO,CAACO,KAAT,CAAP;AACD;AACD,OAAO,SAASK,WAAT,GAA6B;AAClCR,EAAAA,OAAO,CAACJ,OAAO,CAACS,IAAT,CAAP;AACD","sourcesContent":["import { useState } from 'react'\n\nenum AppMode {\n  home,\n  write,\n  read,\n}\n\nexport function useAppMode() {\n  const [mode, setMode] = useState(AppMode.home)\n}\n\nexport function isHomeMode(): boolean {\n  return mode == AppMode.home\n}\nexport function isWriteMode(): boolean {\n  return mode == AppMode.write\n}\nexport function isReadMode(): boolean {\n  return mode == AppMode.read\n}\nexport function setHomeMode(): void {\n  setMode(AppMode.home)\n}\nexport function setWriteMode(): void {\n  setMode(AppMode.write)\n}\nexport function setReadMode(): void {\n  setMode(AppMode.read)\n}\n"]},"metadata":{},"sourceType":"module"}
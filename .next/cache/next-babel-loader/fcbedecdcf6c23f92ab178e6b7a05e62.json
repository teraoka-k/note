{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ObjectID } from 'mongodb';\nimport { insertDocument, findDocuments, deleteDocument, updateDocument } from '../logic/mongoAPI';\nconst collectionName = 'note';\nexport class Note {\n  constructor(text) {\n    _defineProperty(this, \"_id\", void 0);\n\n    _defineProperty(this, \"text\", void 0);\n\n    this.text = text;\n  }\n\n  async insert() {\n    await insertDocument(collectionName, this);\n  }\n\n  static async find(id) {\n    return await findDocuments(collectionName, id ? {\n      _id: new ObjectID(id)\n    } : {});\n  }\n\n  static async delete(id) {\n    await deleteDocument(collectionName, {\n      _id: new ObjectID(id)\n    });\n  }\n\n  static async update(id, text) {\n    await updateDocument(collectionName, {\n      _id: new ObjectID(id)\n    }, {\n      text\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
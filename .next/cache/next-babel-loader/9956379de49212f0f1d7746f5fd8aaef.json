{"ast":null,"code":"import { Note } from '../../logic/colllections/note';\nexport default (async (req, res) => {\n  switch (req.method) {\n    case 'GET':\n      // const notes = await Note.find('5f0aee6f9d9df7b184e26078')\n      const notes = await Note.find();\n      res.status(200).json(notes);\n      break;\n\n    case 'POST':\n      const text = JSON.parse(req.body).text;\n      await new Note(text).insert();\n      res.status(200).json({\n        message: 'ok'\n      });\n      break;\n\n    case 'PUT':\n      break;\n\n    case 'DELETE':\n      const id = JSON.parse(req.body);\n      await Note.delete(id);\n      res.status(200).json({\n        message: 'ok'\n      });\n      break;\n  }\n});","map":{"version":3,"sources":["/home/teraoka/app/note/pages/api/note.ts"],"names":["Note","req","res","method","notes","find","status","json","text","JSON","parse","body","insert","message","id","delete"],"mappings":"AACA,SAASA,IAAT,QAAqB,+BAArB;AAEA,gBAAe,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AAClE,UAAQD,GAAG,CAACE,MAAZ;AACE,SAAK,KAAL;AACE;AACA,YAAMC,KAAK,GAAG,MAAMJ,IAAI,CAACK,IAAL,EAApB;AACAH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,KAArB;AACA;;AACF,SAAK,MAAL;AACE,YAAMI,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,IAAf,EAAqBH,IAAlC;AACA,YAAM,IAAIR,IAAJ,CAASQ,IAAT,EAAeI,MAAf,EAAN;AACAV,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;;AACF,SAAK,KAAL;AACE;;AACF,SAAK,QAAL;AACE,YAAMC,EAAE,GAAGL,IAAI,CAACC,KAAL,CAAWT,GAAG,CAACU,IAAf,CAAX;AACA,YAAMX,IAAI,CAACe,MAAL,CAAYD,EAAZ,CAAN;AACAZ,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AAjBJ;AAmBD,CApBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\nimport { Note } from '../../logic/colllections/note'\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n  switch (req.method) {\n    case 'GET':\n      // const notes = await Note.find('5f0aee6f9d9df7b184e26078')\n      const notes = await Note.find()\n      res.status(200).json(notes)\n      break\n    case 'POST':\n      const text = JSON.parse(req.body).text\n      await new Note(text).insert()\n      res.status(200).json({ message: 'ok' })\n      break\n    case 'PUT':\n      break\n    case 'DELETE':\n      const id = JSON.parse(req.body)\n      await Note.delete(id)\n      res.status(200).json({ message: 'ok' })\n      break\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
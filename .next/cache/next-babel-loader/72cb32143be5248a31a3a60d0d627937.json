{"ast":null,"code":"var _jsxFileName = \"/home/teraoka/app/note/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { MdEditor } from '../components/mdEditor';\nimport { center } from '../styles/styles';\nimport { useState, useEffect } from 'react';\nimport { playOpenSound } from '../util/sounds';\nimport ReadMode from '../components/readMode';\nimport { isHomeMode, setWriteMode, setReadMode, isWriteMode, setHomeMode, isReadMode } from '../logic/appMode';\nexport default (() => {\n  const {\n    0: notes,\n    1: setNotes\n  } = useState([]);\n  useEffect(() => {\n    async function fetchNotes() {\n      const res = await fetch('api/notes');\n      const data = await res.json();\n      setNotes(data);\n    }\n\n    fetchNotes();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"app\",\n    style: center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, isHomeMode() ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: () => {\n      playOpenSound();\n      setWriteMode();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Write\"), __jsx(\"button\", {\n    onClick: () => {\n      playOpenSound();\n\n      async function fetchNotes() {\n        const res = await fetch('api/notes');\n        const data = await res.json();\n        setNotes(data);\n      }\n\n      fetchNotes();\n      setReadMode();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Read\")) : null, isWriteMode() ? __jsx(MdEditor, {\n    setHomeMode: setHomeMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }\n  }) : null, isReadMode() ? __jsx(ReadMode, {\n    notes: notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }\n  }) : null);\n});","map":{"version":3,"sources":["/home/teraoka/app/note/pages/index.tsx"],"names":["MdEditor","center","useState","useEffect","playOpenSound","ReadMode","isHomeMode","setWriteMode","setReadMode","isWriteMode","setHomeMode","isReadMode","notes","setNotes","fetchNotes","res","fetch","data","json"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SACEC,UADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,UANF,QAOO,kBAPP;AASA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeW,UAAf,GAA4B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD;;AACDH,IAAAA,UAAU;AACX,GAPQ,EAON,EAPM,CAAT;AASA,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAEb,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,UAAU,KACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbF,MAAAA,aAAa;AACbG,MAAAA,YAAY;AACb,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EASE;AACE,IAAA,OAAO,EAAE,MAAM;AACbH,MAAAA,aAAa;;AACb,qBAAeU,UAAf,GAA4B;AAC1B,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,cAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,QAAAA,QAAQ,CAACI,IAAD,CAAR;AACD;;AACDH,MAAAA,UAAU;AACVN,MAAAA,WAAW;AACZ,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADS,GAyBP,IA1BN,EA2BGC,WAAW,KAAK,MAAC,QAAD;AAAU,IAAA,WAAW,EAAEC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAAuD,IA3BrE,EA4BGC,UAAU,KAAK,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAA2C,IA5BxD,CADF;AAgCD,CA5CD","sourcesContent":["import { MdEditor } from '../components/mdEditor'\nimport { center } from '../styles/styles'\nimport { useState, useEffect } from 'react'\nimport { playOpenSound } from '../util/sounds'\nimport ReadMode from '../components/readMode'\nimport { Note } from '../logic/colllections/note'\nimport {\n  isHomeMode,\n  setWriteMode,\n  setReadMode,\n  isWriteMode,\n  setHomeMode,\n  isReadMode,\n} from '../logic/appMode'\n\nexport default () => {\n  const [notes, setNotes] = useState([] as Note[])\n\n  useEffect(() => {\n    async function fetchNotes() {\n      const res = await fetch('api/notes')\n      const data = await res.json()\n      setNotes(data)\n    }\n    fetchNotes()\n  }, [])\n\n  return (\n    <div id=\"app\" style={center}>\n      {isHomeMode() ? (\n        <div>\n          <button\n            onClick={() => {\n              playOpenSound()\n              setWriteMode()\n            }}\n          >\n            Write\n          </button>\n          <button\n            onClick={() => {\n              playOpenSound()\n              async function fetchNotes() {\n                const res = await fetch('api/notes')\n                const data = await res.json()\n                setNotes(data)\n              }\n              fetchNotes()\n              setReadMode()\n            }}\n          >\n            Read\n          </button>\n        </div>\n      ) : null}\n      {isWriteMode() ? <MdEditor setHomeMode={setHomeMode}></MdEditor> : null}\n      {isReadMode() ? <ReadMode notes={notes}></ReadMode> : null}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
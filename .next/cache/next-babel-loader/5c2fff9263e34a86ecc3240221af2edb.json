{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { cacheData, getCache } from '../cache/cache';\nimport { buttons, leftPane, rightPane } from '../styles/styles';\nimport { windowHeight } from '../states/windowSize';\nimport { BackButton } from './backButton';\nimport { SaveButton, saveNote } from './saveButton';\nimport { isWriteMode } from '../states/appMode';\nimport { viewingNote } from '../states/viewingNote';\nvar Mode;\n\n(function (Mode) {\n  Mode[Mode[\"IN\"] = 0] = \"IN\";\n  Mode[Mode[\"OUT\"] = 1] = \"OUT\";\n})(Mode || (Mode = {}));\n\nexport var Writer = function Writer() {\n  // states\n  var _useState = useState(isWriteMode() ? getCache('writing') || '' : viewingNote.text),\n      src = _useState[0],\n      setSrc = _useState[1];\n\n  var _useState2 = useState(Mode.IN),\n      mode = _useState2[0],\n      setMode = _useState2[1]; // reference to child components\n\n\n  var inputElement = useRef(null);\n  var outputElement = useRef(null);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    style: buttons\n  }, __jsx(SaveButton, {\n    src: src\n  }), __jsx(BackButton, null)), __jsx(\"textarea\", {\n    style: leftPane,\n    autoFocus: true,\n    placeholder: \"# Write Markdown here\",\n    onChange: function onChange(e) {\n      setSrc(e.target.value);\n      cacheData('writing', src);\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setMode(Mode.IN);\n    },\n    onTouchStart: function onTouchStart() {\n      return setMode(Mode.IN);\n    },\n    onScroll: function onScroll(e) {\n      if (mode == Mode.IN) {\n        outputElement.current.scrollTop = e.currentTarget.scrollTop / (e.currentTarget.scrollHeight - windowHeight) * (outputElement.current.scrollHeight - windowHeight);\n      }\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.ctrlKey && e.key == 'Enter') saveNote(src);\n    },\n    ref: inputElement,\n    value: src\n  }), __jsx(\"div\", {\n    style: rightPane,\n    onMouseEnter: function onMouseEnter() {\n      return setMode(Mode.OUT);\n    },\n    onTouchStart: function onTouchStart() {\n      return setMode(Mode.OUT);\n    },\n    onScroll: function onScroll(e) {\n      if (mode == Mode.OUT) {\n        inputElement.current.scrollTop = e.currentTarget.scrollTop / (e.currentTarget.scrollHeight - windowHeight) * (inputElement.current.scrollHeight - windowHeight);\n      }\n    },\n    ref: outputElement\n  }, __jsx(ReactMarkdown, {\n    source: src\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}
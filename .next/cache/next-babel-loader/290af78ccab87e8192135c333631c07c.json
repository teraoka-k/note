{"ast":null,"code":"import { MongoClient } from 'mongodb';\nconst DB_ADDRESS_PORT = 'mongodb://localhost:27017';\nconst DB_NAME = 'mongodb';\nlet db;\nconnect();\nexport function insertDocument(collectionName, document) {\n  getCollection(collectionName).insertOne(document);\n}\nexport function findDocuments(collectionName, filter, reconnects) {\n  if (reconnects) reconnect();\n  let result;\n  getCollection(collectionName).find(filter).toArray((err, docs) => result = docs);\n  return result;\n}\n/**\n * @private\n */\n\nfunction connect() {\n  MongoClient.connect(DB_ADDRESS_PORT, (err, client) => {\n    db = client.db(DB_NAME);\n    client.close();\n  });\n}\n/**\n * @private\n */\n\n\nfunction reconnect() {\n  MongoClient.connect(DB_ADDRESS_PORT, (err, client) => {\n    db = client.db(DB_NAME);\n    client.close();\n  });\n}\n/**\n * @private\n */\n\n\nfunction getCollection(collectionName) {\n  if (!db) connect();\n  return db.collection(collectionName);\n}","map":{"version":3,"sources":["/home/teraoka/app/note/logic/mongoAPI.ts"],"names":["MongoClient","DB_ADDRESS_PORT","DB_NAME","db","connect","insertDocument","collectionName","document","getCollection","insertOne","findDocuments","filter","reconnects","reconnect","result","find","toArray","err","docs","client","close","collection"],"mappings":"AAAA,SAASA,WAAT,QAA4C,SAA5C;AAEA,MAAMC,eAAe,GAAG,2BAAxB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,IAAIC,EAAJ;AACAC,OAAO;AAEP,OAAO,SAASC,cAAT,CAAwBC,cAAxB,EAAgDC,QAAhD,EAAkE;AACvEC,EAAAA,aAAa,CAACF,cAAD,CAAb,CAA8BG,SAA9B,CAAwCF,QAAxC;AACD;AAED,OAAO,SAASG,aAAT,CACLJ,cADK,EAELK,MAFK,EAGLC,UAHK,EAIE;AACP,MAAIA,UAAJ,EAAgBC,SAAS;AACzB,MAAIC,MAAJ;AACAN,EAAAA,aAAa,CAACF,cAAD,CAAb,CACGS,IADH,CACQJ,MADR,EAEGK,OAFH,CAEW,CAACC,GAAD,EAAMC,IAAN,KAAgBJ,MAAM,GAAGI,IAFpC;AAGA,SAAOJ,MAAP;AACD;AAED;;;;AAGA,SAASV,OAAT,GAAmB;AACjBJ,EAAAA,WAAW,CAACI,OAAZ,CAAoBH,eAApB,EAAqC,CAACgB,GAAD,EAAME,MAAN,KAAiB;AACpDhB,IAAAA,EAAE,GAAGgB,MAAM,CAAChB,EAAP,CAAUD,OAAV,CAAL;AACAiB,IAAAA,MAAM,CAACC,KAAP;AACD,GAHD;AAID;AACD;;;;;AAGA,SAASP,SAAT,GAAqB;AACnBb,EAAAA,WAAW,CAACI,OAAZ,CAAoBH,eAApB,EAAqC,CAACgB,GAAD,EAAME,MAAN,KAAiB;AACpDhB,IAAAA,EAAE,GAAGgB,MAAM,CAAChB,EAAP,CAAUD,OAAV,CAAL;AACAiB,IAAAA,MAAM,CAACC,KAAP;AACD,GAHD;AAID;AACD;;;;;AAGA,SAASZ,aAAT,CAAuBF,cAAvB,EAAgE;AAC9D,MAAI,CAACH,EAAL,EAASC,OAAO;AAChB,SAAOD,EAAE,CAACkB,UAAH,CAAcf,cAAd,CAAP;AACD","sourcesContent":["import { MongoClient, Db, Collection } from 'mongodb'\n\nconst DB_ADDRESS_PORT = 'mongodb://localhost:27017'\nconst DB_NAME = 'mongodb'\nlet db: Db\nconnect()\n\nexport function insertDocument(collectionName: string, document: object) {\n  getCollection(collectionName).insertOne(document)\n}\n\nexport function findDocuments(\n  collectionName: string,\n  filter: object,\n  reconnects?: boolean\n): any[] {\n  if (reconnects) reconnect()\n  let result: any[]\n  getCollection(collectionName)\n    .find(filter)\n    .toArray((err, docs) => (result = docs))\n  return result\n}\n\n/**\n * @private\n */\nfunction connect() {\n  MongoClient.connect(DB_ADDRESS_PORT, (err, client) => {\n    db = client.db(DB_NAME)\n    client.close()\n  })\n}\n/**\n * @private\n */\nfunction reconnect() {\n  MongoClient.connect(DB_ADDRESS_PORT, (err, client) => {\n    db = client.db(DB_NAME)\n    client.close()\n  })\n}\n/**\n * @private\n */\nfunction getCollection(collectionName: string): Collection<any> {\n  if (!db) connect()\n  return db.collection(collectionName)\n}\n"]},"metadata":{},"sourceType":"module"}
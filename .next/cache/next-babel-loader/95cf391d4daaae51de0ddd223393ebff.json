{"ast":null,"code":"import { useState } from 'react';\nvar AppMode;\n\n(function (AppMode) {\n  AppMode[AppMode[\"home\"] = 0] = \"home\";\n  AppMode[AppMode[\"write\"] = 1] = \"write\";\n  AppMode[AppMode[\"read\"] = 2] = \"read\";\n})(AppMode || (AppMode = {}));\n\nvar _useState = useState(AppMode.home),\n    mode = _useState[0],\n    setMode = _useState[1];\n\nexport { mode, setMode };\nexport function isHomeMode() {\n  return mode == AppMode.home;\n}\nexport function isWriteMode() {\n  return mode == AppMode.write;\n}\nexport function isReadMode() {\n  return mode == AppMode.read;\n}\nexport function setHomeMode() {\n  setMode(AppMode.home);\n}\nexport function setWriteMode() {\n  setMode(AppMode.write);\n}\nexport function setReadMode() {\n  setMode(AppMode.read);\n}","map":{"version":3,"sources":["/home/teraoka/app/note/logic/appMode.ts"],"names":["useState","AppMode","home","mode","setMode","isHomeMode","isWriteMode","write","isReadMode","read","setHomeMode","setWriteMode","setReadMode"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;IAEKC,O;;WAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;GAAAA,O,KAAAA,O;;gBAMmBD,QAAQ,CAACC,OAAO,CAACC,IAAT,C;IAAzBC,I;IAAMC,O;;AACb,SAASD,IAAT,EAAeC,OAAf;AAEA,OAAO,SAASC,UAAT,GAA+B;AACpC,SAAOF,IAAI,IAAIF,OAAO,CAACC,IAAvB;AACD;AACD,OAAO,SAASI,WAAT,GAAgC;AACrC,SAAOH,IAAI,IAAIF,OAAO,CAACM,KAAvB;AACD;AACD,OAAO,SAASC,UAAT,GAA+B;AACpC,SAAOL,IAAI,IAAIF,OAAO,CAACQ,IAAvB;AACD;AACD,OAAO,SAASC,WAAT,GAA6B;AAClCN,EAAAA,OAAO,CAACH,OAAO,CAACC,IAAT,CAAP;AACD;AACD,OAAO,SAASS,YAAT,GAA8B;AACnCP,EAAAA,OAAO,CAACH,OAAO,CAACM,KAAT,CAAP;AACD;AACD,OAAO,SAASK,WAAT,GAA6B;AAClCR,EAAAA,OAAO,CAACH,OAAO,CAACQ,IAAT,CAAP;AACD","sourcesContent":["import { useState } from 'react'\n\nenum AppMode {\n  home,\n  write,\n  read,\n}\n\nconst [mode, setMode] = useState(AppMode.home)\nexport { mode, setMode }\n\nexport function isHomeMode(): boolean {\n  return mode == AppMode.home\n}\nexport function isWriteMode(): boolean {\n  return mode == AppMode.write\n}\nexport function isReadMode(): boolean {\n  return mode == AppMode.read\n}\nexport function setHomeMode(): void {\n  setMode(AppMode.home)\n}\nexport function setWriteMode(): void {\n  setMode(AppMode.write)\n}\nexport function setReadMode(): void {\n  setMode(AppMode.read)\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/teraoka/app/note/components/reader.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { NotePreview } from './notePreview';\nimport { useNotes, notes } from '../states/notes';\nimport { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nexport const Reader = () => {\n  useNotes();\n  const {\n    0: viewingNote,\n    1: setViewingNote\n  } = useState(null);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(Swiper, {\n    spaceBetween: 50,\n    slidesPerView: 5,\n    pagination: {\n      clickable: true\n    },\n    scrollbar: {\n      draggable: true\n    },\n    autoHeight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, notes.map(note => __jsx(SwiperSlide, {\n    key: note._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    onClick: () => setViewingNote(note),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(NotePreview, {\n    note: note,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }))))), __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      left: '50%',\n      transform: 'translate(-50%, 0%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, viewingNote ? __jsx(ReactMarkdown, {\n    source: viewingNote.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }) : null));\n};","map":{"version":3,"sources":["/home/teraoka/app/note/components/reader.tsx"],"names":["SwiperCore","Navigation","Pagination","Scrollbar","A11y","Swiper","SwiperSlide","NotePreview","useNotes","notes","useState","ReactMarkdown","use","Reader","viewingNote","setViewingNote","clickable","draggable","map","note","_id","position","left","transform","text"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AACA,OAAO,4CAAP;AACA,OAAOA,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,IAAxD,QAAoE,QAApE;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,iBAAhC;AACA,SAASC,QAAT,QAAwC,OAAxC;AAEA,OAAOC,aAAP,MAA0B,gBAA1B;AAIAX,UAAU,CAACY,GAAX,CAAe,CAACX,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,EAAoCC,IAApC,CAAf;AAEA,OAAO,MAAMS,MAAM,GAAG,MAAM;AAC1BL,EAAAA,QAAQ;AACR,QAAM;AAAA,OAACM,WAAD;AAAA,OAAcC;AAAd,MAAgCL,QAAQ,CAAC,IAAD,CAA9C;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,YAAY,EAAE,EADhB;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,UAAU,EAAE;AAAEM,MAAAA,SAAS,EAAE;AAAb,KAHd;AAIE,IAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAJb;AAKE,IAAA,UAAU,EAAE,IALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGR,KAAK,CAACS,GAAN,CAAWC,IAAD,IACT,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,OAAO,EAAE,MAAML,cAAc,CAACI,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADD,CAPH,CADF,EAgBE;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,IAAI,EAAE,KAFD;AAGLC,MAAAA,SAAS,EAAE;AAHN,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGT,WAAW,GACV,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEA,WAAW,CAACU,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAER,IATN,CAhBF,CADF;AA8BD,CAlCM","sourcesContent":["import 'swiper/swiper.scss'\nimport 'swiper/components/navigation/navigation.scss'\nimport 'swiper/components/pagination/pagination.scss'\nimport 'swiper/components/scrollbar/scrollbar.scss'\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { NotePreview } from './notePreview'\nimport { useNotes, notes } from '../states/notes'\nimport { useState, CSSProperties } from 'react'\nimport { Note } from '../logic/colllections/note'\nimport ReactMarkdown from 'react-markdown'\nimport { windowHeight, windowWidth } from '../states/windowSize'\nimport { center } from '../styles/styles'\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y])\n\nexport const Reader = () => {\n  useNotes()\n  const [viewingNote, setViewingNote] = useState(null as Note)\n\n  return (\n    <div>\n      <Swiper\n        spaceBetween={50}\n        slidesPerView={5}\n        pagination={{ clickable: true }}\n        scrollbar={{ draggable: true }}\n        autoHeight={true}\n      >\n        {notes.map((note) => (\n          <SwiperSlide key={note._id}>\n            <div onClick={() => setViewingNote(note)}>\n              <NotePreview note={note}></NotePreview>\n            </div>\n          </SwiperSlide>\n        ))}\n      </Swiper>\n      <div\n        style={{\n          position: 'absolute',\n          left: '50%',\n          transform: 'translate(-50%, 0%)',\n        }}\n      >\n        {viewingNote ? (\n          <ReactMarkdown source={viewingNote.text}></ReactMarkdown>\n        ) : null}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
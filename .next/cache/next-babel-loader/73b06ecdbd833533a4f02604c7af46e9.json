{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { MdEditor } from '../components/mdEditor';\nimport { center } from '../styles/styles';\nimport { useState } from 'react';\nimport { playOpenSound } from '../util/sounds';\nimport ReadMode from '../components/readMode';\nvar AppMode;\n\n(function (AppMode) {\n  AppMode[AppMode[\"home\"] = 0] = \"home\";\n  AppMode[AppMode[\"write\"] = 1] = \"write\";\n  AppMode[AppMode[\"read\"] = 2] = \"read\";\n})(AppMode || (AppMode = {}));\n\nexport var __N_SSG = true;\nexport default _s(function () {\n  _s();\n\n  var _useState = useState(AppMode.home),\n      mode = _useState[0],\n      setMode = _useState[1];\n\n  return __jsx(\"div\", {\n    id: \"app\",\n    style: center,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, isHomeMode() ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      playOpenSound();\n      setWriteMode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Write\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      playOpenSound();\n      setReadMode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Read\")) : null, isWriteMode() ? __jsx(MdEditor, {\n    setHomeMode: setHomeMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }\n  }) : null, isReadMode() ? __jsx(ReadMode, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }) : null);\n\n  function isHomeMode() {\n    return mode == AppMode.home;\n  }\n\n  function isWriteMode() {\n    return mode == AppMode.write;\n  }\n\n  function isReadMode() {\n    return mode == AppMode.read;\n  }\n\n  function setHomeMode() {\n    setMode(AppMode.home);\n  }\n\n  function setWriteMode() {\n    setMode(AppMode.write);\n  }\n\n  function setReadMode() {\n    setMode(AppMode.read);\n  }\n}, \"hSjdgMRM8ZFTq6mprEdLp1PM2sI=\");","map":{"version":3,"sources":["/home/teraoka/app/note/pages/index.tsx"],"names":["MdEditor","center","useState","playOpenSound","ReadMode","AppMode","home","mode","setMode","isHomeMode","setWriteMode","setReadMode","isWriteMode","setHomeMode","isReadMode","write","read"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;IAEKC,O;;WAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;GAAAA,O,KAAAA,O;;;AAML,kBAAe,YAAM;AAAA;;AAAA,kBACKH,QAAQ,CAACG,OAAO,CAACC,IAAT,CADb;AAAA,MACZC,IADY;AAAA,MACNC,OADM;;AAGnB,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAEP,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,UAAU,KACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,mBAAM;AACbN,MAAAA,aAAa;AACbO,MAAAA,YAAY;AACb,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EASE;AACE,IAAA,OAAO,EAAE,mBAAM;AACbP,MAAAA,aAAa;AACbQ,MAAAA,WAAW;AACZ,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADS,GAmBP,IApBN,EAqBGC,WAAW,KAAK,MAAC,QAAD;AAAU,IAAA,WAAW,EAAEC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAAuD,IArBrE,EAsBGC,UAAU,KAAK,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAA6B,IAtB1C,CADF;;AA2BA,WAASL,UAAT,GAA+B;AAC7B,WAAOF,IAAI,IAAIF,OAAO,CAACC,IAAvB;AACD;;AACD,WAASM,WAAT,GAAgC;AAC9B,WAAOL,IAAI,IAAIF,OAAO,CAACU,KAAvB;AACD;;AACD,WAASD,UAAT,GAA+B;AAC7B,WAAOP,IAAI,IAAIF,OAAO,CAACW,IAAvB;AACD;;AACD,WAASH,WAAT,GAA6B;AAC3BL,IAAAA,OAAO,CAACH,OAAO,CAACC,IAAT,CAAP;AACD;;AACD,WAASI,YAAT,GAA8B;AAC5BF,IAAAA,OAAO,CAACH,OAAO,CAACU,KAAT,CAAP;AACD;;AACD,WAASJ,WAAT,GAA6B;AAC3BH,IAAAA,OAAO,CAACH,OAAO,CAACW,IAAT,CAAP;AACD;AACF,CAhDD","sourcesContent":["import { MdEditor } from '../components/mdEditor'\nimport { center } from '../styles/styles'\nimport { useState } from 'react'\nimport { playOpenSound } from '../util/sounds'\nimport ReadMode from '../components/readMode'\n\nenum AppMode {\n  home,\n  write,\n  read,\n}\n\nexport default () => {\n  const [mode, setMode] = useState(AppMode.home)\n\n  return (\n    <div id=\"app\" style={center}>\n      {isHomeMode() ? (\n        <div>\n          <button\n            onClick={() => {\n              playOpenSound()\n              setWriteMode()\n            }}\n          >\n            Write\n          </button>\n          <button\n            onClick={() => {\n              playOpenSound()\n              setReadMode()\n            }}\n          >\n            Read\n          </button>\n        </div>\n      ) : null}\n      {isWriteMode() ? <MdEditor setHomeMode={setHomeMode}></MdEditor> : null}\n      {isReadMode() ? <ReadMode></ReadMode> : null}\n    </div>\n  )\n\n  function isHomeMode(): boolean {\n    return mode == AppMode.home\n  }\n  function isWriteMode(): boolean {\n    return mode == AppMode.write\n  }\n  function isReadMode(): boolean {\n    return mode == AppMode.read\n  }\n  function setHomeMode(): void {\n    setMode(AppMode.home)\n  }\n  function setWriteMode(): void {\n    setMode(AppMode.write)\n  }\n  function setReadMode(): void {\n    setMode(AppMode.read)\n  }\n}\n\nexport async function getStaticProps() {\n  let notes = await (await fetch('api/notes')).json()\n  return { props: { notes: notes } }\n}\n"]},"metadata":{},"sourceType":"module"}
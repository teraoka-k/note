{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/components/writer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { cacheData, getCache } from '../cache/cache';\nimport { center } from '../styles/styles';\nimport { playCloseSound, playEnterSound } from '../util/sounds';\nimport { setHomeMode } from '../states/appMode';\nvar Mode;\n\n(function (Mode) {\n  Mode[Mode[\"IN\"] = 0] = \"IN\";\n  Mode[Mode[\"OUT\"] = 1] = \"OUT\";\n})(Mode || (Mode = {}));\n\nexport var Writer = function Writer() {\n  _s();\n\n  // states\n  var _useState = useState(getCache('writing') || '# Markdown Editor\\n\\nwrite a note here'),\n      src = _useState[0],\n      setSrc = _useState[1];\n\n  var _useState2 = useState(Mode.IN),\n      mode = _useState2[0],\n      setMode = _useState2[1]; // reference to child components\n\n\n  var inputElement = useRef(null);\n  var outputElement = useRef(null); // after mount\n  // - auto resize window\n  // useEffect(() => {\n  //   const adaptWindowSize = () => {\n  //     setHeight((window.innerHeight * 0.9) / 2.1)\n  //     setWidth(window.innerWidth * 0.9 - 20)\n  //   }\n  //   adaptWindowSize()\n  //   window.addEventListener('resize', adaptWindowSize)\n  // }, [])\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"textarea\", {\n    style: {\n      height: \"\".concat(height, \"px\"),\n      width: \"\".concat(width, \"px\")\n    },\n    onChange: function onChange(e) {\n      setSrc(e.target.value);\n      cacheData('writing', src);\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setMode(Mode.IN);\n    },\n    onTouchStart: function onTouchStart() {\n      return setMode(Mode.IN);\n    },\n    onScroll: function onScroll(e) {\n      if (mode == Mode.IN) {\n        outputElement.current.scrollTop = e.currentTarget.scrollTop / (e.currentTarget.scrollHeight - height) * (outputElement.current.scrollHeight - height);\n      }\n    },\n    ref: inputElement,\n    value: src,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: center,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      playEnterSound();\n      fetch('/api/note', {\n        method: 'post',\n        body: JSON.stringify({\n          text: src\n        })\n      });\n      setHomeMode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Save\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      playCloseSound();\n      setHomeMode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Back\")), __jsx(\"div\", {\n    style: {\n      height: \"\".concat(height, \"px\"),\n      width: \"\".concat(width, \"px\"),\n      overflow: 'auto'\n    },\n    onMouseEnter: function onMouseEnter() {\n      return setMode(Mode.OUT);\n    },\n    onTouchStart: function onTouchStart() {\n      return setMode(Mode.OUT);\n    },\n    onScroll: function onScroll(e) {\n      if (mode == Mode.OUT) {\n        inputElement.current.scrollTop = e.currentTarget.scrollTop / (e.currentTarget.scrollHeight - height) * (inputElement.current.scrollHeight - height);\n      }\n    },\n    ref: outputElement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(ReactMarkdown, {\n    source: src,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Writer, \"U+GtwRg3PfFHOZCtuEgsybPnKJ8=\");\n\n_c = Writer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Writer\");","map":{"version":3,"sources":["/home/teraoka/app/note/components/writer.tsx"],"names":["useState","useRef","ReactMarkdown","cacheData","getCache","center","playCloseSound","playEnterSound","setHomeMode","Mode","Writer","src","setSrc","IN","mode","setMode","inputElement","outputElement","height","width","e","target","value","current","scrollTop","currentTarget","scrollHeight","fetch","method","body","JSON","stringify","text","overflow","OUT"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { cacheData, getCache } from '../cache/cache'\nimport { center } from '../styles/styles'\nimport { playCloseSound, playEnterSound } from '../util/sounds'\nimport { setHomeMode } from '../states/appMode'\nimport { useWindowSize } from '../states/windowSize'\n\nenum Mode {\n  IN,\n  OUT,\n}\n\nexport const Writer = () => {\n  // states\n  const [src, setSrc] = useState(\n    getCache('writing') || '# Markdown Editor\\n\\nwrite a note here'\n  )\n  const [mode, setMode] = useState(Mode.IN)\n\n  // reference to child components\n  const inputElement = useRef(null)\n  const outputElement = useRef(null)\n\n  // after mount\n  // - auto resize window\n  // useEffect(() => {\n  //   const adaptWindowSize = () => {\n  //     setHeight((window.innerHeight * 0.9) / 2.1)\n  //     setWidth(window.innerWidth * 0.9 - 20)\n  //   }\n  //   adaptWindowSize()\n  //   window.addEventListener('resize', adaptWindowSize)\n  // }, [])\n\n  return (\n    <div>\n      <textarea\n        style={{ height: `${height}px`, width: `${width}px` }}\n        onChange={(e) => {\n          setSrc(e.target.value)\n          cacheData('writing', src)\n        }}\n        onMouseEnter={() => setMode(Mode.IN)}\n        onTouchStart={() => setMode(Mode.IN)}\n        onScroll={(e) => {\n          if (mode == Mode.IN) {\n            outputElement.current.scrollTop =\n              (e.currentTarget.scrollTop /\n                (e.currentTarget.scrollHeight - height)) *\n              (outputElement.current.scrollHeight - height)\n          }\n        }}\n        ref={inputElement}\n        value={src}\n      ></textarea>\n      <div style={center}>\n        <button\n          onClick={() => {\n            playEnterSound()\n            fetch('/api/note', {\n              method: 'post',\n              body: JSON.stringify({ text: src }),\n            })\n            setHomeMode()\n          }}\n        >\n          Save\n        </button>\n        <button\n          onClick={() => {\n            playCloseSound()\n            setHomeMode()\n          }}\n        >\n          Back\n        </button>\n      </div>\n      <div\n        style={{\n          height: `${height}px`,\n          width: `${width}px`,\n          overflow: 'auto',\n        }}\n        onMouseEnter={() => setMode(Mode.OUT)}\n        onTouchStart={() => setMode(Mode.OUT)}\n        onScroll={(e) => {\n          if (mode == Mode.OUT) {\n            inputElement.current.scrollTop =\n              (e.currentTarget.scrollTop /\n                (e.currentTarget.scrollHeight - height)) *\n              (inputElement.current.scrollHeight - height)\n          }\n        }}\n        ref={outputElement}\n      >\n        <ReactMarkdown source={src}></ReactMarkdown>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
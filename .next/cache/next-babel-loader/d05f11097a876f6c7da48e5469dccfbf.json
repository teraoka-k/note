{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState } from 'react';\nvar SOUND_FILE_NAMES = ['open', 'close', 'enter'];\nvar soundLibrary;\nvar setSoundLibrary;\nexport function useSounds() {\n  _s();\n\n  ;\n\n  var _useState = useState(loadSoundLibrary());\n\n  var _useState2 = _slicedToArray(_useState, 2);\n\n  soundLibrary = _useState2[0];\n  setSoundLibrary = _useState2[1];\n}\n\n_s(useSounds, \"gGDaf48x3jIYCXOhOdo0dVAH4Rk=\");\n\nexport function playOpenSound() {\n  soundLibrary['open'].play();\n}\nexport function playCloseSound() {\n  soundLibrary['close'].play();\n}\nexport function playEnterSound() {\n  soundLibrary['enter'].play();\n}\n\nfunction loadSoundLibrary() {\n  var sounds = {};\n  SOUND_FILE_NAMES.forEach(function (fileName) {\n    return sounds[fileName] = new Audio(\"sounds/\".concat(fileName, \".mp3\"));\n  });\n  return sounds; // useEffect(() => {\n  //   const sounds = {}\n  //   SOUND_FILE_NAMES.forEach(\n  //     (fileName) => (sounds[fileName] = new Audio(`sounds/${fileName}.mp3`))\n  //   )\n  // }, [])\n}","map":{"version":3,"sources":["/home/teraoka/app/note/states/soundLibrary.ts"],"names":["useState","SOUND_FILE_NAMES","soundLibrary","setSoundLibrary","useSounds","loadSoundLibrary","playOpenSound","play","playCloseSound","playEnterSound","sounds","forEach","fileName","Audio"],"mappings":";;;;AAAA,SAASA,QAAT,QAA8D,OAA9D;AAEA,IAAMC,gBAAgB,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAzB;AAEA,IAAIC,YAAJ;AACA,IAAIC,eAAJ;AAEA,OAAO,SAASC,SAAT,GAA2B;AAAA;;AAChC;;AADgC,kBACGJ,QAAQ,CAACK,gBAAgB,EAAjB,CADX;;AAAA;;AAC9BH,EAAAA,YAD8B;AAChBC,EAAAA,eADgB;AAEjC;;GAFeC,S;;AAIhB,OAAO,SAASE,aAAT,GAA+B;AACpCJ,EAAAA,YAAY,CAAC,MAAD,CAAZ,CAAqBK,IAArB;AACD;AAED,OAAO,SAASC,cAAT,GAAgC;AACrCN,EAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsBK,IAAtB;AACD;AAED,OAAO,SAASE,cAAT,GAAgC;AACrCP,EAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsBK,IAAtB;AACD;;AAED,SAASF,gBAAT,GAA0C;AACxC,MAAMK,MAAM,GAAG,EAAf;AACAT,EAAAA,gBAAgB,CAACU,OAAjB,CACE,UAACC,QAAD;AAAA,WAAeF,MAAM,CAACE,QAAD,CAAN,GAAmB,IAAIC,KAAJ,kBAAoBD,QAApB,UAAlC;AAAA,GADF;AAGA,SAAOF,MAAP,CALwC,CAMxC;AACA;AACA;AACA;AACA;AACA;AACD","sourcesContent":["import { useState, Dispatch, SetStateAction, useEffect } from 'react'\n\nconst SOUND_FILE_NAMES = ['open', 'close', 'enter']\n\nlet soundLibrary: SoundLibrary\nlet setSoundLibrary: Dispatch<SetStateAction<SoundLibrary>>\n\nexport function useSounds(): void {\n  ;[soundLibrary, setSoundLibrary] = useState(loadSoundLibrary())\n}\n\nexport function playOpenSound(): void {\n  soundLibrary['open'].play()\n}\n\nexport function playCloseSound(): void {\n  soundLibrary['close'].play()\n}\n\nexport function playEnterSound(): void {\n  soundLibrary['enter'].play()\n}\n\nfunction loadSoundLibrary(): SoundLibrary {\n  const sounds = {}\n  SOUND_FILE_NAMES.forEach(\n    (fileName) => (sounds[fileName] = new Audio(`sounds/${fileName}.mp3`))\n  )\n  return sounds\n  // useEffect(() => {\n  //   const sounds = {}\n  //   SOUND_FILE_NAMES.forEach(\n  //     (fileName) => (sounds[fileName] = new Audio(`sounds/${fileName}.mp3`))\n  //   )\n  // }, [])\n}\n\ninterface SoundLibrary {\n  [soundName: string]: HTMLAudioElement\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/teraoka/app/note/components/notePreview.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nvar Mode;\n\n(function (Mode) {\n  Mode[Mode[\"expanded\"] = 0] = \"expanded\";\n  Mode[Mode[\"collapsed\"] = 1] = \"collapsed\";\n})(Mode || (Mode = {}));\n\nexport default (props => {\n  const {\n    0: text,\n    1: setText\n  } = useState(props.note.text.split(/[\\r\\n]/)[0]);\n  const {\n    0: preview,\n    1: setPreview\n  } = useState();\n  return __jsx(\"div\", {\n    onClick: () => setText(props.note.text),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(ReactMarkdown, {\n    source: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/home/teraoka/app/note/components/notePreview.tsx"],"names":["useState","ReactMarkdown","Mode","props","text","setText","note","split","preview","setPreview"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;IAOKC,I;;WAAAA,I;AAAAA,EAAAA,I,CAAAA,I;AAAAA,EAAAA,I,CAAAA,I;GAAAA,I,KAAAA,I;;AAKL,gBAAgBC,KAAD,IAAkB;AAC/B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAACG,KAAK,CAACG,IAAN,CAAWF,IAAX,CAAgBG,KAAhB,CAAsB,QAAtB,EAAgC,CAAhC,CAAD,CAAhC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,EAAtC;AACA,SACE;AAAK,IAAA,OAAO,EAAE,MAAMK,OAAO,CAACF,KAAK,CAACG,IAAN,CAAWF,IAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CARD","sourcesContent":["import { useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { Note } from '../logic/colllections/note'\n\ninterface Props {\n  note: Note\n}\n\nenum Mode {\n  expanded,\n  collapsed,\n}\n\nexport default (props: Props) => {\n  const [text, setText] = useState(props.note.text.split(/[\\r\\n]/)[0])\n  const [preview, setPreview] = useState()\n  return (\n    <div onClick={() => setText(props.note.text)}>\n      <ReactMarkdown source={text}></ReactMarkdown>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
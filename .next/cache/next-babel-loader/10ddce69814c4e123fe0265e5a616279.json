{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/components/notePreviewer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport { SwiperSlide, Swiper } from 'swiper/swiper-react';\nimport { NotePreview } from './notePreview';\nimport { notes, useNotes } from '../states/notes';\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\nexport var NotePreviewer = function NotePreviewer(props) {\n  _s();\n\n  useNotes()(__jsx(Swiper, {\n    spaceBetween: 50,\n    slidesPerView: 5,\n    pagination: {\n      clickable: true\n    },\n    scrollbar: {\n      draggable: true\n    },\n    autoHeight: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, notes.map(function (note) {\n    return __jsx(SwiperSlide, {\n      key: note._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      onClick: function onClick() {\n        return props.setViewingNote(note);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, __jsx(NotePreview, {\n      note: note,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    })));\n  })));\n};\n\n_s(NotePreviewer, \"AobWCjfxAMcBFSN8T1L59xpZl5g=\", false, function () {\n  return [useNotes];\n});\n\n_c = NotePreviewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePreviewer\");","map":{"version":3,"sources":["/home/teraoka/app/note/components/notePreviewer.tsx"],"names":["SwiperSlide","Swiper","NotePreview","notes","useNotes","SwiperCore","Navigation","Pagination","Scrollbar","A11y","use","NotePreviewer","props","clickable","draggable","map","note","_id","setViewingNote"],"mappings":";;;;;;AAAA,OAAO,oBAAP;AACA,OAAO,8CAAP;AACA,OAAO,8CAAP;AACA,OAAO,4CAAP;AAEA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,qBAApC;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,iBAAhC;AACA,OAAOC,UAAP,IAAqBC,UAArB,EAAiCC,UAAjC,EAA6CC,SAA7C,EAAwDC,IAAxD,QAAoE,QAApE;AAEAJ,UAAU,CAACK,GAAX,CAAe,CAACJ,UAAD,EAAaC,UAAb,EAAyBC,SAAzB,EAAoCC,IAApC,CAAf;AAEA,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAEvB;AAAA;;AACJR,EAAAA,QAAQ,GACN,MAAC,MAAD;AACE,IAAA,YAAY,EAAE,EADhB;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,UAAU,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAHd;AAIE,IAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAJb;AAKE,IAAA,UAAU,EAAE,IALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGX,KAAK,CAACY,GAAN,CAAU,UAACC,IAAD;AAAA,WACT,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,OAAO,EAAE;AAAA,eAAML,KAAK,CAACM,cAAN,CAAqBF,IAArB,CAAN;AAAA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADS;AAAA,GAAV,CAPH,CADM,CAAR;AAiBD,CApBM;;GAAML,a;UAGXP,Q;;;KAHWO,a","sourcesContent":["import 'swiper/swiper.scss'\nimport 'swiper/components/navigation/navigation.scss'\nimport 'swiper/components/pagination/pagination.scss'\nimport 'swiper/components/scrollbar/scrollbar.scss'\nimport { Note } from '../logic/colllections/note'\nimport { SwiperSlide, Swiper } from 'swiper/swiper-react'\nimport { NotePreview } from './notePreview'\nimport { Dispatch, SetStateAction } from 'react'\nimport { notes, useNotes } from '../states/notes'\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper'\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y])\n\nexport const NotePreviewer = (props: {\n  setViewingNote: Dispatch<SetStateAction<Note>>\n}) => {\n  useNotes()(\n    <Swiper\n      spaceBetween={50}\n      slidesPerView={5}\n      pagination={{ clickable: true }}\n      scrollbar={{ draggable: true }}\n      autoHeight={true}\n    >\n      {notes.map((note) => (\n        <SwiperSlide key={note._id}>\n          <div onClick={() => props.setViewingNote(note)}>\n            <NotePreview note={note}></NotePreview>\n          </div>\n        </SwiperSlide>\n      ))}\n    </Swiper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
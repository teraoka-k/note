{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { cacheData, getCache } from '../cache/cache';\nimport { buttons, leftPane, rightPane } from '../styles/styles';\nimport { windowHeight } from '../states/windowSize';\nimport { BackButton } from './backButton';\nimport { SaveButton } from './saveButton';\nimport { isWriteMode } from '../states/appMode';\nimport { viewingNote } from '../states/viewingNote';\nvar Mode;\n\n(function (Mode) {\n  Mode[Mode[\"IN\"] = 0] = \"IN\";\n  Mode[Mode[\"OUT\"] = 1] = \"OUT\";\n})(Mode || (Mode = {}));\n\nexport const Writer = () => {\n  // states\n  const {\n    0: src,\n    1: setSrc\n  } = useState(isWriteMode() ? getCache('writing') || '# Markdown Editor\\n\\nwrite a note here' : viewingNote.text);\n  const {\n    0: mode,\n    1: setMode\n  } = useState(Mode.IN); // reference to child components\n\n  const inputElement = useRef(null);\n  const outputElement = useRef(null);\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    style: buttons\n  }, __jsx(SaveButton, {\n    src: src\n  }), __jsx(BackButton, null)), __jsx(\"textarea\", {\n    style: leftPane,\n    onChange: e => {\n      setSrc(e.target.value);\n      cacheData('writing', src);\n    },\n    onMouseEnter: () => setMode(Mode.IN),\n    onTouchStart: () => setMode(Mode.IN),\n    onScroll: e => {\n      if (mode == Mode.IN) {\n        outputElement.current.scrollTop = e.currentTarget.scrollTop / (e.currentTarget.scrollHeight - windowHeight) * (outputElement.current.scrollHeight - windowHeight);\n      }\n    },\n    ref: inputElement,\n    value: src\n  }), __jsx(\"div\", {\n    style: rightPane,\n    onMouseEnter: () => setMode(Mode.OUT),\n    onTouchStart: () => setMode(Mode.OUT),\n    onScroll: e => {\n      if (mode == Mode.OUT) {\n        inputElement.current.scrollTop = e.currentTarget.scrollTop / (e.currentTarget.scrollHeight - windowHeight) * (inputElement.current.scrollHeight - windowHeight);\n      }\n    },\n    ref: outputElement\n  }, __jsx(ReactMarkdown, {\n    source: src\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}
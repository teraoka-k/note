{"ast":null,"code":"import { MongoClient } from 'mongodb';\nconst URL = 'mongodb://localhost:27017';\nconst NAME = 'mongodb';\nexport async function insertDocument(collectionName, document) {\n  await execute(async function () {\n    this.collection(collectionName).insertOne(document);\n  });\n}\nexport async function findDocuments(collectionName, filter) {\n  return await execute(async function () {\n    this.collection(collectionName).find({}).toArray();\n  });\n}\n/**\n * @private\n */\n\nasync function execute(action) {\n  let client;\n\n  try {\n    client = await MongoClient.connect(URL, {\n      useNewUrlParser: true\n    });\n    const db = client.db(NAME);\n    return await action.call(db);\n  } catch (error) {\n    console.error(error);\n  } finally {\n    client.close();\n  }\n}","map":{"version":3,"sources":["/home/teraoka/app/note/logic/mongoAPI.ts"],"names":["MongoClient","URL","NAME","insertDocument","collectionName","document","execute","collection","insertOne","findDocuments","filter","find","toArray","action","client","connect","useNewUrlParser","db","call","error","console","close"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,MAAMC,GAAG,GAAG,2BAAZ;AACA,MAAMC,IAAI,GAAG,SAAb;AAEA,OAAO,eAAeC,cAAf,CACLC,cADK,EAELC,QAFK,EAGU;AACf,QAAMC,OAAO,CAAC,kBAAkB;AAC9B,SAAKC,UAAL,CAAgBH,cAAhB,EAAgCI,SAAhC,CAA0CH,QAA1C;AACD,GAFY,CAAb;AAGD;AAED,OAAO,eAAeI,aAAf,CACLL,cADK,EAELM,MAFK,EAGW;AAChB,SAAO,MAAMJ,OAAO,CAAC,kBAAkB;AACrC,SAAKC,UAAL,CAAgBH,cAAhB,EAAgCO,IAAhC,CAAqC,EAArC,EAAyCC,OAAzC;AACD,GAFmB,CAApB;AAGD;AAED;;;;AAGA,eAAeN,OAAf,CAAuBO,MAAvB,EAAyC;AACvC,MAAIC,MAAJ;;AACA,MAAI;AACFA,IAAAA,MAAM,GAAG,MAAMd,WAAW,CAACe,OAAZ,CAAoBd,GAApB,EAAyB;AAAEe,MAAAA,eAAe,EAAE;AAAnB,KAAzB,CAAf;AACA,UAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAUf,IAAV,CAAX;AACA,WAAO,MAAMW,MAAM,CAACK,IAAP,CAAYD,EAAZ,CAAb;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GAND,SAMU;AACRL,IAAAA,MAAM,CAACO,KAAP;AACD;AACF","sourcesContent":["import { MongoClient } from 'mongodb'\n\nconst URL = 'mongodb://localhost:27017'\nconst NAME = 'mongodb'\n\nexport async function insertDocument(\n  collectionName: string,\n  document: object\n): Promise<void> {\n  await execute(async function () {\n    this.collection(collectionName).insertOne(document)\n  })\n}\n\nexport async function findDocuments(\n  collectionName: string,\n  filter: object\n): Promise<any[]> {\n  return await execute(async function () {\n    this.collection(collectionName).find({}).toArray()\n  })\n}\n\n/**\n * @private\n */\nasync function execute(action: Function) {\n  let client: MongoClient\n  try {\n    client = await MongoClient.connect(URL, { useNewUrlParser: true })\n    const db = client.db(NAME)\n    return await action.call(db)\n  } catch (error) {\n    console.error(error)\n  } finally {\n    client.close()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { MdEditor } from '../components/mdEditor';\nimport { center } from '../styles/styles';\nimport { useState } from 'react';\nimport { playOpenSound } from '../util/sounds';\nimport { ReadMode } from '../components/readMode';\nvar AppMode;\n\n(function (AppMode) {\n  AppMode[AppMode[\"home\"] = 0] = \"home\";\n  AppMode[AppMode[\"write\"] = 1] = \"write\";\n  AppMode[AppMode[\"read\"] = 2] = \"read\";\n})(AppMode || (AppMode = {}));\n\nexport var __N_SSG = true;\nexport default _s(function (props) {\n  _s();\n\n  var _useState = useState(AppMode.home),\n      mode = _useState[0],\n      setMode = _useState[1];\n\n  return __jsx(\"div\", {\n    id: \"app\",\n    style: center,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.data.arr.map(function (n) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, \"n\");\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"test\"), isHomeMode() ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      playOpenSound();\n      setWriteMode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Write\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      playOpenSound();\n      setReadMode();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Read\")) : null, isWriteMode() ? __jsx(MdEditor, {\n    setHomeMode: setHomeMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }\n  }) : null, isReadMode() ? __jsx(ReadMode, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }) : null);\n\n  function isHomeMode() {\n    return mode == AppMode.home;\n  }\n\n  function isWriteMode() {\n    return mode == AppMode.write;\n  }\n\n  function isReadMode() {\n    return mode == AppMode.read;\n  }\n\n  function setHomeMode() {\n    setMode(AppMode.home);\n  }\n\n  function setWriteMode() {\n    setMode(AppMode.write);\n  }\n\n  function setReadMode() {\n    setMode(AppMode.read);\n  }\n}, \"hSjdgMRM8ZFTq6mprEdLp1PM2sI=\");","map":{"version":3,"sources":["/home/teraoka/app/note/pages/index.tsx"],"names":["MdEditor","center","useState","playOpenSound","ReadMode","AppMode","props","home","mode","setMode","data","arr","map","n","isHomeMode","setWriteMode","setReadMode","isWriteMode","setHomeMode","isReadMode","write","read"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,QAAyB,wBAAzB;IAEKC,O;;WAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;GAAAA,O,KAAAA,O;;;AAML,kBAAe,UAACC,KAAD,EAAW;AAAA;;AAAA,kBACAJ,QAAQ,CAACG,OAAO,CAACE,IAAT,CADR;AAAA,MACjBC,IADiB;AAAA,MACXC,OADW;;AAGxB,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAER,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAeC,GAAf,CAAmB,UAACC,CAAD;AAAA,WAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADkB;AAAA,GAAnB,CADH,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGC,UAAU,KACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,mBAAM;AACbX,MAAAA,aAAa;AACbY,MAAAA,YAAY;AACb,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EASE;AACE,IAAA,OAAO,EAAE,mBAAM;AACbZ,MAAAA,aAAa;AACba,MAAAA,WAAW;AACZ,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADS,GAmBP,IAxBN,EAyBGC,WAAW,KAAK,MAAC,QAAD;AAAU,IAAA,WAAW,EAAEC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAAuD,IAzBrE,EA0BGC,UAAU,KAAK,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAA6B,IA1B1C,CADF;;AA+BA,WAASL,UAAT,GAA+B;AAC7B,WAAON,IAAI,IAAIH,OAAO,CAACE,IAAvB;AACD;;AACD,WAASU,WAAT,GAAgC;AAC9B,WAAOT,IAAI,IAAIH,OAAO,CAACe,KAAvB;AACD;;AACD,WAASD,UAAT,GAA+B;AAC7B,WAAOX,IAAI,IAAIH,OAAO,CAACgB,IAAvB;AACD;;AACD,WAASH,WAAT,GAA6B;AAC3BT,IAAAA,OAAO,CAACJ,OAAO,CAACE,IAAT,CAAP;AACD;;AACD,WAASQ,YAAT,GAA8B;AAC5BN,IAAAA,OAAO,CAACJ,OAAO,CAACe,KAAT,CAAP;AACD;;AACD,WAASJ,WAAT,GAA6B;AAC3BP,IAAAA,OAAO,CAACJ,OAAO,CAACgB,IAAT,CAAP;AACD;AACF,CApDD","sourcesContent":["import { MdEditor } from '../components/mdEditor'\nimport { center } from '../styles/styles'\nimport { useState } from 'react'\nimport { playOpenSound } from '../util/sounds'\nimport { ReadMode } from '../components/readMode'\n\nenum AppMode {\n  home,\n  write,\n  read,\n}\n\nexport default (props) => {\n  const [mode, setMode] = useState(AppMode.home)\n\n  return (\n    <div id=\"app\" style={center}>\n      {props.data.arr.map((n) => (\n        <div>n</div>\n      ))}\n      <div>test</div>\n      {isHomeMode() ? (\n        <div>\n          <button\n            onClick={() => {\n              playOpenSound()\n              setWriteMode()\n            }}\n          >\n            Write\n          </button>\n          <button\n            onClick={() => {\n              playOpenSound()\n              setReadMode()\n            }}\n          >\n            Read\n          </button>\n        </div>\n      ) : null}\n      {isWriteMode() ? <MdEditor setHomeMode={setHomeMode}></MdEditor> : null}\n      {isReadMode() ? <ReadMode></ReadMode> : null}\n    </div>\n  )\n\n  function isHomeMode(): boolean {\n    return mode == AppMode.home\n  }\n  function isWriteMode(): boolean {\n    return mode == AppMode.write\n  }\n  function isReadMode(): boolean {\n    return mode == AppMode.read\n  }\n  function setHomeMode(): void {\n    setMode(AppMode.home)\n  }\n  function setWriteMode(): void {\n    setMode(AppMode.write)\n  }\n  function setReadMode(): void {\n    setMode(AppMode.read)\n  }\n}\n\nexport async function getStaticProps() {\n  return {\n    props: 1,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
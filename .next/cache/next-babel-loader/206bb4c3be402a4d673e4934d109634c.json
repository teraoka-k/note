{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/components/notePreview.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nexport default _s(function (props) {\n  _s();\n\n  var _useState = useState(false),\n      collapsed = _useState[0],\n      setCollaspsed = _useState[1];\n\n  var collapsedText = props.note.text.split(/[\\r\\n]/)[0];\n  return __jsx(\"div\", {\n    onClick: function onClick() {\n      return setCollaspsed(!collapsed);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(ReactMarkdown, {\n    source: collapsed ? collapsedText : props.note.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }));\n}, \"QVTJ1F16BJX8xaXd7b45J1D9SCg=\");","map":{"version":3,"sources":["/home/teraoka/app/note/components/notePreview.tsx"],"names":["useState","ReactMarkdown","props","collapsed","setCollaspsed","collapsedText","note","text","split"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAOA,kBAAe,UAACC,KAAD,EAAkB;AAAA;;AAAA,kBACIF,QAAQ,CAAC,KAAD,CADZ;AAAA,MACxBG,SADwB;AAAA,MACbC,aADa;;AAE/B,MAAMC,aAAa,GAAGH,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAgBC,KAAhB,CAAsB,QAAtB,EAAgC,CAAhC,CAAtB;AACA,SACE;AAAK,IAAA,OAAO,EAAE;AAAA,aAAMJ,aAAa,CAAC,CAACD,SAAF,CAAnB;AAAA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AACE,IAAA,MAAM,EAAEA,SAAS,GAAGE,aAAH,GAAmBH,KAAK,CAACI,IAAN,CAAWC,IADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAOD,CAVD","sourcesContent":["import { useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { Note } from '../logic/colllections/note'\n\ninterface Props {\n  note: Note\n}\n\nexport default (props: Props) => {\n  const [collapsed, setCollaspsed] = useState(false)\n  const collapsedText = props.note.text.split(/[\\r\\n]/)[0]\n  return (\n    <div onClick={() => setCollaspsed(!collapsed)}>\n      <ReactMarkdown\n        source={collapsed ? collapsedText : props.note.text}\n      ></ReactMarkdown>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
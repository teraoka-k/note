{"ast":null,"code":"var _jsxFileName = \"/home/teraoka/app/note/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { MdEditor } from '../components/mdEditor';\nimport { center } from '../styles/styles';\nimport { useState, useEffect } from 'react';\nimport { isHomeMode, isWriteMode, isReadMode, useAppMode } from '../logic/appMode';\nimport { WriteButton } from '../components/writeButton';\nimport { ReadMode } from '../components/readMode';\nimport { ReadButton } from '../components/readButton';\nexport default (() => {\n  useAppMode();\n  const {\n    0: notes,\n    1: setNotes\n  } = useState([]);\n  useEffect(() => {\n    async function fetchNotes() {\n      const res = await fetch('api/notes');\n      const data = await res.json();\n      setNotes(data);\n    }\n\n    fetchNotes();\n  }, []);\n  return __jsx(\"div\", {\n    id: \"app\",\n    style: center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, isHomeMode() ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(WriteButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), __jsx(ReadButton, {\n    setNotes: setNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })) : null, isWriteMode() ? __jsx(MdEditor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 24\n    }\n  }) : null, isReadMode() ? __jsx(ReadMode, {\n    notes: notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }) : null);\n});","map":{"version":3,"sources":["/home/teraoka/app/note/pages/index.tsx"],"names":["MdEditor","center","useState","useEffect","isHomeMode","isWriteMode","isReadMode","useAppMode","WriteButton","ReadMode","ReadButton","notes","setNotes","fetchNotes","res","fetch","data","json"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SACEC,UADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,UAJF,QAKO,kBALP;AAMA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,gBAAe,MAAM;AACnBH,EAAAA,UAAU;AACV,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeU,UAAf,GAA4B;AAC1B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAL,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD;;AACDH,IAAAA,UAAU;AACX,GAPQ,EAON,EAPM,CAAT;AASA,SACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAc,IAAA,KAAK,EAAEZ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,UAAU,KACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAEQ,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADS,GAKP,IANN,EAOGP,WAAW,KAAK,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAA6B,IAP3C,EAQGC,UAAU,KAAK,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEK,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,GAA2C,IARxD,CADF;AAYD,CAzBD","sourcesContent":["import { MdEditor } from '../components/mdEditor'\nimport { center } from '../styles/styles'\nimport { useState, useEffect } from 'react'\nimport { Note } from '../logic/colllections/note'\nimport {\n  isHomeMode,\n  isWriteMode,\n  isReadMode,\n  useAppMode,\n} from '../logic/appMode'\nimport { WriteButton } from '../components/writeButton'\nimport { ReadMode } from '../components/readMode'\nimport { ReadButton } from '../components/readButton'\nexport default () => {\n  useAppMode()\n  const [notes, setNotes] = useState([] as Note[])\n\n  useEffect(() => {\n    async function fetchNotes() {\n      const res = await fetch('api/notes')\n      const data = await res.json()\n      setNotes(data)\n    }\n    fetchNotes()\n  }, [])\n\n  return (\n    <div id=\"app\" style={center}>\n      {isHomeMode() ? (\n        <div>\n          <WriteButton></WriteButton>\n          <ReadButton setNotes={setNotes}></ReadButton>\n        </div>\n      ) : null}\n      {isWriteMode() ? <MdEditor></MdEditor> : null}\n      {isReadMode() ? <ReadMode notes={notes}></ReadMode> : null}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useState } from 'react';\nvar AppMode;\n\n(function (AppMode) {\n  AppMode[AppMode[\"home\"] = 0] = \"home\";\n  AppMode[AppMode[\"write\"] = 1] = \"write\";\n  AppMode[AppMode[\"read\"] = 2] = \"read\";\n})(AppMode || (AppMode = {}));\n\nexport function useAppMode() {\n  const {\n    0: mode,\n    1: setMode\n  } = useState(AppMode.home);\n}\nexport function isHomeMode() {\n  return mode == AppMode.home;\n}\nexport function isWriteMode() {\n  return mode == AppMode.write;\n}\nexport function isReadMode() {\n  return mode == AppMode.read;\n}\nexport function setHomeMode() {\n  setMode(AppMode.home);\n}\nexport function setWriteMode() {\n  setMode(AppMode.write);\n}\nexport function setReadMode() {\n  setMode(AppMode.read);\n}","map":{"version":3,"sources":["/home/teraoka/app/note/logic/appMode.ts"],"names":["useState","AppMode","useAppMode","mode","setMode","home","isHomeMode","isWriteMode","write","isReadMode","read","setHomeMode","setWriteMode","setReadMode"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;IAEKC,O;;WAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;GAAAA,O,KAAAA,O;;AAML,OAAO,SAASC,UAAT,GAAsB;AAC3B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBJ,QAAQ,CAACC,OAAO,CAACI,IAAT,CAAhC;AACD;AAED,OAAO,SAASC,UAAT,GAA+B;AACpC,SAAOH,IAAI,IAAIF,OAAO,CAACI,IAAvB;AACD;AACD,OAAO,SAASE,WAAT,GAAgC;AACrC,SAAOJ,IAAI,IAAIF,OAAO,CAACO,KAAvB;AACD;AACD,OAAO,SAASC,UAAT,GAA+B;AACpC,SAAON,IAAI,IAAIF,OAAO,CAACS,IAAvB;AACD;AACD,OAAO,SAASC,WAAT,GAA6B;AAClCP,EAAAA,OAAO,CAACH,OAAO,CAACI,IAAT,CAAP;AACD;AACD,OAAO,SAASO,YAAT,GAA8B;AACnCR,EAAAA,OAAO,CAACH,OAAO,CAACO,KAAT,CAAP;AACD;AACD,OAAO,SAASK,WAAT,GAA6B;AAClCT,EAAAA,OAAO,CAACH,OAAO,CAACS,IAAT,CAAP;AACD","sourcesContent":["import { useState } from 'react'\n\nenum AppMode {\n  home,\n  write,\n  read,\n}\n\nexport function useAppMode() {\n  const [mode, setMode] = useState(AppMode.home)\n}\n\nexport function isHomeMode(): boolean {\n  return mode == AppMode.home\n}\nexport function isWriteMode(): boolean {\n  return mode == AppMode.write\n}\nexport function isReadMode(): boolean {\n  return mode == AppMode.read\n}\nexport function setHomeMode(): void {\n  setMode(AppMode.home)\n}\nexport function setWriteMode(): void {\n  setMode(AppMode.write)\n}\nexport function setReadMode(): void {\n  setMode(AppMode.read)\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/teraoka/app/note/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nvar AppMode;\n\n(function (AppMode) {\n  AppMode[AppMode[\"home\"] = 0] = \"home\";\n  AppMode[AppMode[\"write\"] = 1] = \"write\";\n  AppMode[AppMode[\"read\"] = 2] = \"read\";\n})(AppMode || (AppMode = {}));\n\nexport default /*#__PURE__*/_asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var _useState, mode, setMode, isHomeMode, isWriteMode, isReadMode, setHomeMode, setWriteMode, setReadMode;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          setReadMode = function _setReadMode() {\n            setMode(AppMode.read);\n          };\n\n          setWriteMode = function _setWriteMode() {\n            setMode(AppMode.write);\n          };\n\n          setHomeMode = function _setHomeMode() {\n            setMode(AppMode.home);\n          };\n\n          isReadMode = function _isReadMode() {\n            return mode == AppMode.read;\n          };\n\n          isWriteMode = function _isWriteMode() {\n            return mode == AppMode.write;\n          };\n\n          isHomeMode = function _isHomeMode() {\n            return mode == AppMode.home;\n          };\n\n          _s();\n\n          _useState = useState(AppMode.home), mode = _useState[0], setMode = _useState[1]; // const [notes, setNotes] = useState(await (await fetch('api/notes')).json())\n          // console.log(notes)\n\n          return _context.abrupt(\"return\", __jsx(\"div\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 5\n            }\n          }, \"test\") // <div id=\"app\" style={center}>\n          //   {isHomeMode() ? (\n          //     <div>\n          //       <button\n          //         onClick={() => {\n          //           playOpenSound()\n          //           setWriteMode()\n          //         }}\n          //       >\n          //         Write\n          //       </button>\n          //       <button\n          //         onClick={() => {\n          //           playOpenSound()\n          //           setReadMode()\n          //         }}\n          //       >\n          //         Read\n          //       </button>\n          //     </div>\n          //   ) : null}\n          //   {isWriteMode() ? <MdEditor setHomeMode={setHomeMode}></MdEditor> : null}\n          //   {isReadMode() ? <ReadMode notes={['test', 'tewst']}></ReadMode> : null}\n          // </div>\n          );\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}), \"hSjdgMRM8ZFTq6mprEdLp1PM2sI=\"));","map":{"version":3,"sources":["/home/teraoka/app/note/pages/index.tsx"],"names":["useState","AppMode","isHomeMode","isWriteMode","isReadMode","setHomeMode","setWriteMode","setReadMode","setMode","read","write","home","mode"],"mappings":";;;;;;;;;AAEA,SAASA,QAAT,QAAyB,OAAzB;IAKKC,O;;WAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;AAAAA,EAAAA,O,CAAAA,O;GAAAA,O,KAAAA,O;;AAML,wFAAe;AAAA,gCAiCJC,UAjCI,EAoCJC,WApCI,EAuCJC,UAvCI,EA0CJC,WA1CI,EA6CJC,YA7CI,EAgDJC,WAhDI;;AAAA;AAAA;AAAA;AAAA;AAgDJA,UAAAA,WAhDI,2BAgDgB;AAC3BC,YAAAA,OAAO,CAACP,OAAO,CAACQ,IAAT,CAAP;AACD,WAlDY;;AA6CJH,UAAAA,YA7CI,4BA6CiB;AAC5BE,YAAAA,OAAO,CAACP,OAAO,CAACS,KAAT,CAAP;AACD,WA/CY;;AA0CJL,UAAAA,WA1CI,2BA0CgB;AAC3BG,YAAAA,OAAO,CAACP,OAAO,CAACU,IAAT,CAAP;AACD,WA5CY;;AAuCJP,UAAAA,UAvCI,0BAuCkB;AAC7B,mBAAOQ,IAAI,IAAIX,OAAO,CAACQ,IAAvB;AACD,WAzCY;;AAoCJN,UAAAA,WApCI,2BAoCmB;AAC9B,mBAAOS,IAAI,IAAIX,OAAO,CAACS,KAAvB;AACD,WAtCY;;AAiCJR,UAAAA,UAjCI,0BAiCkB;AAC7B,mBAAOU,IAAI,IAAIX,OAAO,CAACU,IAAvB;AACD,WAnCY;;AAAA;;AAAA,sBACWX,QAAQ,CAACC,OAAO,CAACU,IAAT,CADnB,EACNC,IADM,iBACAJ,OADA,iBAEb;AACA;;AAHa,2CAMX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANW,CAOX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import { MdEditor } from '../components/mdEditor'\nimport { center } from '../styles/styles'\nimport { useState } from 'react'\nimport { playOpenSound } from '../util/sounds'\nimport ReadMode from '../components/readMode'\nimport { Note } from '../logic/colllections/note'\n\nenum AppMode {\n  home,\n  write,\n  read,\n}\n\nexport default async () => {\n  const [mode, setMode] = useState(AppMode.home)\n  // const [notes, setNotes] = useState(await (await fetch('api/notes')).json())\n  // console.log(notes)\n\n  return (\n    <div>test</div>\n    // <div id=\"app\" style={center}>\n    //   {isHomeMode() ? (\n    //     <div>\n    //       <button\n    //         onClick={() => {\n    //           playOpenSound()\n    //           setWriteMode()\n    //         }}\n    //       >\n    //         Write\n    //       </button>\n    //       <button\n    //         onClick={() => {\n    //           playOpenSound()\n    //           setReadMode()\n    //         }}\n    //       >\n    //         Read\n    //       </button>\n    //     </div>\n    //   ) : null}\n    //   {isWriteMode() ? <MdEditor setHomeMode={setHomeMode}></MdEditor> : null}\n    //   {isReadMode() ? <ReadMode notes={['test', 'tewst']}></ReadMode> : null}\n    // </div>\n  )\n\n  function isHomeMode(): boolean {\n    return mode == AppMode.home\n  }\n  function isWriteMode(): boolean {\n    return mode == AppMode.write\n  }\n  function isReadMode(): boolean {\n    return mode == AppMode.read\n  }\n  function setHomeMode(): void {\n    setMode(AppMode.home)\n  }\n  function setWriteMode(): void {\n    setMode(AppMode.write)\n  }\n  function setReadMode(): void {\n    setMode(AppMode.read)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
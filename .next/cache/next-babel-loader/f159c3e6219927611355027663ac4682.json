{"ast":null,"code":"import { useState, useEffect } from 'react';\nconst SOUND_FILE_NAMES = ['open', 'close', 'enter'];\nlet soundLibrary;\nlet setSoundLibrary;\nexport function useSounds() {\n  ;\n  [soundLibrary, setSoundLibrary] = useState({});\n  loadSoundLibrary();\n}\nexport function playOpenSound() {\n  soundLibrary['open'].play();\n  loadSoundLibrary();\n}\nexport function playCloseSound() {\n  soundLibrary['close'].play();\n  loadSoundLibrary();\n}\nexport function playEnterSound() {\n  soundLibrary['enter'].play();\n  loadSoundLibrary();\n}\n\nfunction loadSoundLibrary() {\n  useEffect(() => {\n    const soundLibrary = {};\n    SOUND_FILE_NAMES.forEach(fileName => soundLibrary[fileName] = new Audio(`sounds/${fileName}.mp3`));\n    setSoundLibrary(soundLibrary);\n  }, []);\n}","map":{"version":3,"sources":["/home/teraoka/app/note/states/soundLibrary.ts"],"names":["useState","useEffect","SOUND_FILE_NAMES","soundLibrary","setSoundLibrary","useSounds","loadSoundLibrary","playOpenSound","play","playCloseSound","playEnterSound","forEach","fileName","Audio"],"mappings":"AAAA,SAASA,QAAT,EAA6CC,SAA7C,QAA8D,OAA9D;AAEA,MAAMC,gBAAgB,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAzB;AAEA,IAAIC,YAAJ;AACA,IAAIC,eAAJ;AAEA,OAAO,SAASC,SAAT,GAA2B;AAChC;AAAC,GAACF,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAA1C;AACDM,EAAAA,gBAAgB;AACjB;AAED,OAAO,SAASC,aAAT,GAA+B;AACpCJ,EAAAA,YAAY,CAAC,MAAD,CAAZ,CAAqBK,IAArB;AACAF,EAAAA,gBAAgB;AACjB;AAED,OAAO,SAASG,cAAT,GAAgC;AACrCN,EAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsBK,IAAtB;AACAF,EAAAA,gBAAgB;AACjB;AAED,OAAO,SAASI,cAAT,GAAgC;AACrCP,EAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsBK,IAAtB;AACAF,EAAAA,gBAAgB;AACjB;;AAED,SAASA,gBAAT,GAAkC;AAChCL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAME,YAAY,GAAG,EAArB;AACAD,IAAAA,gBAAgB,CAACS,OAAjB,CACGC,QAAD,IACGT,YAAY,CAACS,QAAD,CAAZ,GAAyB,IAAIC,KAAJ,CAAW,UAASD,QAAS,MAA7B,CAF9B;AAIAR,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GAPQ,EAON,EAPM,CAAT;AAQD","sourcesContent":["import { useState, Dispatch, SetStateAction, useEffect } from 'react'\n\nconst SOUND_FILE_NAMES = ['open', 'close', 'enter']\n\nlet soundLibrary: SoundLibrary\nlet setSoundLibrary: Dispatch<SetStateAction<SoundLibrary>>\n\nexport function useSounds(): void {\n  ;[soundLibrary, setSoundLibrary] = useState({})\n  loadSoundLibrary()\n}\n\nexport function playOpenSound(): void {\n  soundLibrary['open'].play()\n  loadSoundLibrary()\n}\n\nexport function playCloseSound(): void {\n  soundLibrary['close'].play()\n  loadSoundLibrary()\n}\n\nexport function playEnterSound(): void {\n  soundLibrary['enter'].play()\n  loadSoundLibrary()\n}\n\nfunction loadSoundLibrary(): void {\n  useEffect(() => {\n    const soundLibrary = {}\n    SOUND_FILE_NAMES.forEach(\n      (fileName) =>\n        (soundLibrary[fileName] = new Audio(`sounds/${fileName}.mp3`))\n    )\n    setSoundLibrary(soundLibrary)\n  }, [])\n}\n\ninterface SoundLibrary {\n  [soundName: string]: HTMLAudioElement\n}\n"]},"metadata":{},"sourceType":"module"}